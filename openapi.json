{
    "openapi": "3.0.3",
    "info": {
      "title": "Platform-V3",
      "description": "This documentation has been automatically generated by Treblle. Visit https://treblle.com/ and get started for FREE.",
      "version": "0.0.14"
    },
    "servers": [
      {
        "url": "https://staging-platform.treblle.com/api/v1/"
      }
    ],
    "paths": {
      "/contact-sales": {
        "post": {
          "operationId": "submitContactSalesForm",
          "summary": "Submit a contact sales form",
          "description": "Allows users to submit a contact sales form with their details. The request should include all required fields. On success, a confirmation message is returned with the details of the submitted request.",
          "tags": [
            "contact-sales"
          ],
          "requestBody": {
            "description": "The contact sales form to be submitted.",
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "The first name of the contact person."
                    },
                    "last_name": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "The last name of the contact person."
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "maxLength": 255,
                      "description": "The email address of the contact person."
                    },
                    "company": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "The name of the company the contact person represents."
                    },
                    "phone": {
                      "type": "string",
                      "pattern": "^\\(+?[0-9\\s\\-()]*\\)$",
                      "description": "The phone number of the contact person, including country code if applicable."
                    },
                    "message": {
                      "type": "string",
                      "description": "The message or inquiry from the contact person."
                    }
                  },
                  "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "company",
                    "phone",
                    "message"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully submitted contact sales form",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Contact request submitted successfully.",
                        "description": "Confirmation message indicating successful submission."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "12345",
                            "description": "Unique identifier for the contact request."
                          },
                          "type": {
                            "type": "string",
                            "example": "contact-request",
                            "description": "Type of the resource being returned."
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "type": "string",
                                "example": "John",
                                "description": "First name of the contact person."
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Doe",
                                "description": "Last name of the contact person."
                              },
                              "email": {
                                "type": "string",
                                "example": "john.doe@example.com",
                                "description": "Email address of the contact person."
                              },
                              "company": {
                                "type": "string",
                                "example": "Example Inc.",
                                "description": "Company name of the contact person."
                              },
                              "phone": {
                                "type": "string",
                                "example": "+1234567890",
                                "description": "Phone number of the contact person."
                              },
                              "message": {
                                "type": "string",
                                "example": "I am interested in your services.",
                                "description": "Message or inquiry from the contact person."
                              }
                            },
                            "required": [
                              "first_name",
                              "last_name",
                              "email",
                              "company",
                              "phone",
                              "message"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating the nature of the invalid input."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/logout": {
        "delete": {
          "operationId": "logoutUser",
          "summary": "Logout user",
          "description": "Logs out the currently authenticated user. This endpoint invalidates the user's session and logs them out of the application. If successful, an empty array is returned to confirm the operation.",
          "tags": [
            "logout"
          ],
          "responses": {
            "200": {
              "description": "Successful logout",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Status code or identifier associated with the logout operation."
                    },
                    "example": []
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Unauthorized request. Please log in first.",
                        "description": "Error message indicating that the user is not authenticated or the session is invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred while processing the request.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/me": {
        "get": {
          "operationId": "cfdecdde-6932-48b5-8663-b2726bc13a86",
          "tags": [
            "me"
          ],
          "responses": {
            "200": {
              "description": "GET /me",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "avatar": {
                                "type": "object",
                                "properties": {
                                  "file_name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "small": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "big": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              },
                              "app_name": {
                                "type": "string"
                              },
                              "permissions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "attributes": {
                                      "type": "object",
                                      "properties": {
                                        "roles": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "abilities": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "data",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/settings": {
        "get": {
          "operationId": "retrieveSettings",
          "summary": "Retrieve settings",
          "description": "Fetches the current settings for the application. This endpoint returns a list of settings, along with metadata for pagination and links for navigating through paginated results.",
          "tags": [
            "settings"
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved settings",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Settings retrieved successfully.",
                        "description": "Confirmation message indicating that the settings were successfully retrieved."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "setting1",
                          "description": "A list of settings available in the application."
                        },
                        "description": "Array of settings."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "example": 100,
                            "description": "Total number of settings available."
                          },
                          "count": {
                            "type": "integer",
                            "example": 10,
                            "description": "Number of settings returned in the current page."
                          },
                          "per_page": {
                            "type": "integer",
                            "example": 10,
                            "description": "Number of settings returned per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "example": 1,
                            "description": "Current page number."
                          },
                          "total_pages": {
                            "type": "integer",
                            "example": 10,
                            "description": "Total number of pages available."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ],
                        "description": "Metadata for pagination."
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "example": "http://api.example.com/settings?page=1",
                            "description": "URL to the first page of settings."
                          },
                          "last": {
                            "type": "string",
                            "example": "http://api.example.com/settings?page=10",
                            "description": "URL to the last page of settings."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ],
                        "description": "Pagination links for navigating through the pages."
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/settings/{settingId}": {
        "patch": {
          "operationId": "updateSetting",
          "summary": "Update a specific setting",
          "description": "Updates the specified setting identified by `settingId`. This endpoint allows you to modify the timezone and theme of the setting. Ensure that all required fields are included in the request body.",
          "tags": [
            "settings"
          ],
          "parameters": [
            {
              "name": "settingId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The unique identifier of the setting to be updated."
              }
            }
          ],
          "requestBody": {
            "description": "The updated details for the specified setting.",
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timezone": {
                      "type": "string",
                      "description": "The timezone to be set for the setting."
                    },
                    "theme": {
                      "type": "string",
                      "enum": [
                        "light",
                        "dark"
                      ],
                      "description": "The theme to be applied to the setting. Can be either 'light' or 'dark'."
                    }
                  },
                  "required": [
                    "timezone",
                    "theme"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated setting",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Setting updated successfully.",
                        "description": "Confirmation message indicating that the setting was successfully updated."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "12345",
                            "description": "Unique identifier of the updated setting."
                          },
                          "type": {
                            "type": "string",
                            "example": "setting",
                            "description": "Type of the resource returned."
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "timezone": {
                                "type": "string",
                                "example": "UTC",
                                "description": "The updated timezone of the setting."
                              },
                              "theme": {
                                "type": "string",
                                "example": "light",
                                "description": "The updated theme of the setting."
                              }
                            },
                            "required": [
                              "timezone",
                              "theme"
                            ],
                            "description": "Attributes of the updated setting."
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "description": "Details of the updated setting."
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Setting not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Setting with the specified ID not found.",
                        "description": "Error message indicating that the specified setting could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/users/{userId}/invitations": {
        "get": {
          "operationId": "retrieveUserInvitations",
          "summary": "Retrieve invitations for a specific user",
          "description": "Fetches all invitations for the user identified by `userId`. This endpoint returns a list of invitations along with metadata for pagination and links for navigating through paginated results.",
          "tags": [
            "users"
          ],
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The unique identifier of the user whose invitations are being retrieved."
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved invitations",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Invitations retrieved successfully.",
                        "description": "Confirmation message indicating that the invitations were successfully retrieved."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "invitation123",
                              "description": "Unique identifier of the invitation."
                            },
                            "type": {
                              "type": "string",
                              "example": "invitation",
                              "description": "Type of the resource returned."
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "example": "invitee@example.com",
                                  "description": "Email address of the invitee."
                                },
                                "status": {
                                  "type": "string",
                                  "example": "pending",
                                  "description": "Current status of the invitation."
                                },
                                "role": {
                                  "type": "string",
                                  "example": "member",
                                  "description": "Role assigned to the invitee."
                                },
                                "workspace": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "workspace123",
                                      "description": "Unique identifier of the workspace."
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Example Workspace",
                                      "description": "Name of the workspace."
                                    },
                                    "number_of_members": {
                                      "type": "integer",
                                      "example": 10,
                                      "description": "Number of members in the workspace."
                                    },
                                    "avatar": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "http://example.com/avatar.jpg",
                                        "description": "URL of the workspace avatar."
                                      },
                                      "description": "Array of URLs for the workspace avatar images."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "number_of_members",
                                    "avatar"
                                  ],
                                  "description": "Details of the workspace associated with the invitation."
                                }
                              },
                              "required": [
                                "email",
                                "status",
                                "role",
                                "workspace"
                              ],
                              "description": "Attributes of the invitation."
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ],
                          "description": "List of invitations."
                        },
                        "description": "Array of invitations."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "example": 100,
                            "description": "Total number of invitations available."
                          },
                          "count": {
                            "type": "integer",
                            "example": 10,
                            "description": "Number of invitations returned in the current page."
                          },
                          "per_page": {
                            "type": "integer",
                            "example": 10,
                            "description": "Number of invitations returned per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "example": 1,
                            "description": "Current page number."
                          },
                          "total_pages": {
                            "type": "integer",
                            "example": 10,
                            "description": "Total number of pages available."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ],
                        "description": "Metadata for pagination."
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "example": "http://api.example.com/users/1/invitations?page=1",
                            "description": "URL to the first page of invitations."
                          },
                          "last": {
                            "type": "string",
                            "example": "http://api.example.com/users/1/invitations?page=10",
                            "description": "URL to the last page of invitations."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ],
                        "description": "Pagination links for navigating through the pages."
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/webhooks": {
        "post": {
          "operationId": "processWebhook",
          "summary": "Process incoming webhook events",
          "description": "Receives and processes webhook events from external systems. This endpoint is used to handle event notifications and perform actions based on the received data.",
          "tags": [
            "webhooks"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string",
                      "description": "Type of event that triggered the webhook.",
                      "example": "user_signup"
                    },
                    "environment": {
                      "type": "string",
                      "description": "Environment in which the event occurred (e.g., production, staging).",
                      "example": "production"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Identifier of the sender of the webhook.",
                      "example": "system_xyz"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the webhook event was created.",
                      "example": "2024-07-23T14:00:00Z"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_ids": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "List of user IDs associated with the event.",
                            "example": "user123"
                          },
                          "description": "Array of user IDs related to the event."
                        }
                      },
                      "description": "Additional data related to the event.",
                      "required": [
                        "user_ids"
                      ]
                    }
                  },
                  "required": [
                    "event",
                    "environment",
                    "sender",
                    "created_at",
                    "data"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully processed webhook",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Webhook processed successfully.",
                        "description": "Confirmation message indicating that the webhook was successfully processed."
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces": {
        "get": {
          "operationId": "listWorkspaces",
          "summary": "Retrieve a list of workspaces",
          "description": "Fetches a list of all workspaces with pagination details.",
          "tags": [
            "workspaces"
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved workspaces",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Workspaces retrieved successfully.",
                        "description": "Confirmation message indicating successful retrieval."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/WorkspaceResource"
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "example": 100,
                            "description": "Total number of workspaces."
                          },
                          "count": {
                            "type": "integer",
                            "example": 10,
                            "description": "Number of workspaces returned in the current response."
                          },
                          "per_page": {
                            "type": "integer",
                            "example": 10,
                            "description": "Number of workspaces per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "example": 1,
                            "description": "Current page number."
                          },
                          "total_pages": {
                            "type": "integer",
                            "example": 10,
                            "description": "Total number of pages."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "example": "http://api.example.com/workspaces?page=1",
                            "description": "URL for the first page of results."
                          },
                          "last": {
                            "type": "string",
                            "example": "http://api.example.com/workspaces?page=10",
                            "description": "URL for the last page of results."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "createWorkspace",
          "summary": "Create a new workspace",
          "description": "Creates a new workspace with the provided details.",
          "tags": [
            "workspaces"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the new workspace.",
                      "example": "New Workspace"
                    },
                    "treblle_api_token": {
                      "type": "string",
                      "description": "API token for Treblle.",
                      "example": "abc123"
                    }
                  },
                  "required": [
                    "name",
                    "treblle_api_token"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created workspace",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Workspace created successfully.",
                        "description": "Confirmation message indicating successful creation."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the created workspace.",
                            "example": "workspace123"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the resource.",
                            "example": "workspace"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the workspace.",
                                "example": "New Workspace"
                              },
                              "treblle_api_token": {
                                "type": "string",
                                "description": "API token for Treblle.",
                                "example": "abc123"
                              },
                              "number_of_members": {
                                "type": "integer",
                                "description": "Number of members in the workspace.",
                                "example": 1
                              },
                              "avatar": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "URL to the workspace's avatar.",
                                  "example": "http://example.com/avatar.jpg"
                                },
                                "description": "List of URLs for the workspace's avatar."
                              }
                            },
                            "required": [
                              "name",
                              "treblle_api_token",
                              "number_of_members",
                              "avatar"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}": {
        "get": {
          "operationId": "getWorkspaceById",
          "summary": "Retrieve a specific workspace",
          "description": "Fetches details of a specific workspace identified by the given workspaceId.",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace."
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved workspace",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Workspace retrieved successfully.",
                        "description": "Confirmation message indicating successful retrieval."
                      },
                      "data": {
                        "$ref": "#/components/schemas/WorkspaceResource"
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "updateWorkspace",
          "summary": "Update a specific workspace",
          "description": "Updates the details of a specific workspace identified by the given workspaceId.",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace."
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the workspace.",
                      "example": "Updated Workspace"
                    },
                    "treblle_api_token": {
                      "type": "string",
                      "description": "API token for Treblle.",
                      "example": "newtoken123"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated workspace",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Workspace updated successfully.",
                        "description": "Confirmation message indicating successful update."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the workspace.",
                            "example": "workspace123"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the resource.",
                            "example": "workspace"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Updated name of the workspace.",
                                "example": "Updated Workspace"
                              },
                              "treblle_api_token": {
                                "type": "string",
                                "description": "Updated API token for Treblle.",
                                "example": "newtoken123"
                              },
                              "number_of_employees": {
                                "type": "integer",
                                "description": "Updated number of employees in the workspace.",
                                "example": 55
                              },
                              "number_of_members": {
                                "type": "integer",
                                "description": "Updated number of members in the workspace.",
                                "example": 12
                              },
                              "avatar": {
                                "type": "object",
                                "properties": {
                                  "file_name": {
                                    "type": "string",
                                    "description": "File name of the workspace's avatar.",
                                    "example": "avatar.jpg"
                                  },
                                  "small": {
                                    "type": "string",
                                    "description": "URL for the small version of the avatar.",
                                    "example": "http://example.com/avatar_small.jpg"
                                  },
                                  "big": {
                                    "type": "string",
                                    "description": "URL for the large version of the avatar.",
                                    "example": "http://example.com/avatar_large.jpg"
                                  }
                                },
                                "description": "Details of the workspace's avatar.",
                                "required": [
                                  "file_name",
                                  "small",
                                  "big"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "treblle_api_token",
                              "number_of_employees",
                              "number_of_members",
                              "avatar"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/analytics": {
        "get": {
          "operationId": "getWorkspaceAnalytics",
          "summary": "Retrieve analytics for a specific workspace",
          "description": "Fetches analytics data for a specific workspace identified by the given workspaceId.",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace."
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved analytics data",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Analytics data retrieved successfully.",
                        "description": "Confirmation message indicating successful retrieval of analytics data."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the analytics record.",
                              "example": "analytics123"
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the resource.",
                              "example": "analytics"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "total_requests": {
                                  "type": "integer",
                                  "description": "Total number of requests for the workspace.",
                                  "example": 1200
                                },
                                "total_requests_percentage": {
                                  "type": "number",
                                  "description": "Percentage of total requests relative to a benchmark.",
                                  "example": 75.5
                                },
                                "total_apis": {
                                  "type": "integer",
                                  "description": "Total number of APIs associated with the workspace.",
                                  "example": 45
                                },
                                "total_apis_percentage": {
                                  "type": "number",
                                  "description": "Percentage of total APIs relative to a benchmark.",
                                  "example": 60
                                }
                              },
                              "required": [
                                "total_requests",
                                "total_requests_percentage",
                                "total_apis",
                                "total_apis_percentage"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "List of analytics records for the workspace."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of analytics records.",
                            "example": 100
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of records returned in the current response.",
                            "example": 20
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of records per page.",
                            "example": 20
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available.",
                            "example": 5
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "http://example.com/workspaces/123/analytics?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "http://example.com/workspaces/123/analytics?page=5"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis": {
        "get": {
          "operationId": "getWorkspaceApis",
          "summary": "Retrieve APIs for a specific workspace",
          "description": "Fetches a list of APIs associated with a specific workspace identified by the given workspaceId. Supports pagination, sorting, and limiting results.",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace."
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Number of results to return per page.",
                "example": "20"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Page number of results to return.",
                "example": "1"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "description": "To sort by desc append '-' before the parameter. e.g. created_at for asc, -created_at for desc https://jsonapi.org/format/#fetching-sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "name",
                  "api_score",
                  "num_problems",
                  "num_requests",
                  "avg_load_time",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            {
              "name": "filter[name]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[time_period]",
              "description": "To gets apis created in the last hour for example",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes two values a unit and value. Allowed units include month, week, day and hour",
                "example": "month,1"
              }
            },
            {
              "name": "filter[sdk]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of SDKs",
                "example": "Laravel,Php"
              }
            },
            {
              "name": "filter[environment]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of environments",
                "example": "Development,Staging,Production"
              }
            },
            {
              "name": "filter[search]",
              "description": "To search api list by name or api_url",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[is_favourited]",
              "description": "To filter the api list down to the user's favourites",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "filter[is_visible]",
              "description": "To filter the api list by private or public visibility",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved APIs data",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "APIs data retrieved successfully.",
                        "description": "Confirmation message indicating successful retrieval of APIs data."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the API.",
                              "example": "api123"
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the resource.",
                              "example": "api"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the API.",
                                  "example": "User Service API"
                                },
                                "api_url": {
                                  "type": "string",
                                  "description": "Base URL of the API.",
                                  "example": "https://api.example.com/user"
                                },
                                "total_requests": {
                                  "type": "integer",
                                  "description": "Total number of requests made to the API.",
                                  "example": 1500
                                },
                                "request_percentage": {
                                  "type": "integer",
                                  "description": "Percentage of total requests relative to the workspace.",
                                  "example": 75
                                },
                                "request_per_minute": {
                                  "type": "integer",
                                  "description": "Number of requests per minute.",
                                  "example": 50
                                },
                                "request_per_minute_percentage": {
                                  "type": "integer",
                                  "description": "Percentage of requests per minute relative to the benchmark.",
                                  "example": 80
                                },
                                "endpoint": {
                                  "type": "integer",
                                  "description": "Number of endpoints in the API.",
                                  "example": 10
                                },
                                "endpoint_percentage": {
                                  "type": "integer",
                                  "description": "Percentage of endpoints relative to a benchmark.",
                                  "example": 60
                                },
                                "issues": {
                                  "type": "integer",
                                  "description": "Number of issues reported for the API.",
                                  "example": 3
                                },
                                "issues_percentage": {
                                  "type": "integer",
                                  "description": "Percentage of issues relative to the total number of APIs.",
                                  "example": 5
                                },
                                "sdk": {
                                  "type": "string",
                                  "description": "SDK used by the API.",
                                  "example": "Laravel"
                                },
                                "environment": {
                                  "type": "string",
                                  "description": "Deployment environment of the API.",
                                  "example": "Production"
                                },
                                "score": {
                                  "type": "integer",
                                  "description": "Score assigned to the API.",
                                  "example": 85
                                },
                                "is_favourited": {
                                  "type": "boolean",
                                  "description": "Indicates if the API is favourited.",
                                  "example": true
                                },
                                "number_of_members": {
                                  "type": "integer",
                                  "description": "Number of members associated with the API.",
                                  "example": 12
                                },
                                "updated_at": {
                                  "type": "string",
                                  "description": "Timestamp of the last update.",
                                  "example": "2024-07-22T14:30:00Z"
                                }
                              },
                              "required": [
                                "name",
                                "api_url",
                                "total_requests",
                                "request_percentage",
                                "request_per_minute",
                                "request_per_minute_percentage",
                                "endpoint",
                                "endpoint_percentage",
                                "issues",
                                "issues_percentage",
                                "sdk",
                                "environment",
                                "score",
                                "is_favourited",
                                "number_of_members",
                                "updated_at"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "List of APIs associated with the workspace."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of API records.",
                            "example": 100
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of records returned in the current response.",
                            "example": 20
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of records per page.",
                            "example": 20
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available.",
                            "example": 5
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "http://example.com/workspaces/123/apis?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "http://example.com/workspaces/123/apis?page=5"
                          },
                          "prev": {
                            "type": "string",
                            "description": "URL to the previous page of results.",
                            "example": "http://example.com/workspaces/123/apis?page=0"
                          }
                        },
                        "required": [
                          "first",
                          "last",
                          "prev"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "createApi",
          "summary": "Create a new API in the workspace",
          "description": "Creates a new API record within the specified workspace. Requires the workspaceId and API details.",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace."
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the API.",
                      "maxLength": 100,
                      "example": "User Service API"
                    },
                    "api_url": {
                      "type": "string",
                      "description": "Base URL of the API.",
                      "format": "url",
                      "maxLength": 200,
                      "example": "https://api.example.com/user"
                    },
                    "environment": {
                      "type": "string",
                      "description": "Deployment environment of the API.",
                      "enum": [
                        "Development",
                        "Staging",
                        "Production"
                      ],
                      "example": "Production"
                    },
                    "sdk": {
                      "type": "string",
                      "description": "SDK used by the API.",
                      "enum": [
                        "Laravel",
                        "Php",
                        "Node",
                        "Actix",
                        "Adonis",
                        "Cloudflare",
                        "Directus",
                        "Django",
                        "Express",
                        "Fastify",
                        "Go",
                        "Koa",
                        "Lumen",
                        "NetCore",
                        "Net",
                        "RubyRails",
                        "Rust",
                        "Sails",
                        "Spring",
                        "Strapi",
                        "Symfony",
                        "Traefik"
                      ],
                      "example": "Laravel"
                    },
                    "is_private": {
                      "type": "boolean",
                      "description": "Indicates if the API is private.",
                      "example": true
                    }
                  },
                  "required": [
                    "name",
                    "api_url",
                    "environment",
                    "sdk",
                    "is_private"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created API",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "API created successfully.",
                        "description": "Confirmation message indicating successful creation of the API."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the created API.",
                            "example": "api456"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the resource.",
                            "example": "api"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the API.",
                                "example": "User Service API"
                              },
                              "api_url": {
                                "type": "string",
                                "description": "Base URL of the API.",
                                "example": "https://api.example.com/user"
                              },
                              "total_requests": {
                                "type": "integer",
                                "description": "Total number of requests made to the API.",
                                "example": 0
                              },
                              "request_percentage": {
                                "type": "integer",
                                "description": "Percentage of total requests relative to the workspace.",
                                "example": 0
                              },
                              "request_per_minute": {
                                "type": "integer",
                                "description": "Number of requests per minute.",
                                "example": 0
                              },
                              "request_per_minute_percentage": {
                                "type": "integer",
                                "description": "Percentage of requests per minute relative to the benchmark.",
                                "example": 0
                              },
                              "endpoint": {
                                "type": "integer",
                                "description": "Number of endpoints in the API.",
                                "example": 0
                              },
                              "endpoint_percentage": {
                                "type": "integer",
                                "description": "Percentage of endpoints relative to a benchmark.",
                                "example": 0
                              },
                              "issues": {
                                "type": "integer",
                                "description": "Number of issues reported for the API.",
                                "example": 0
                              },
                              "issues_percentage": {
                                "type": "integer",
                                "description": "Percentage of issues relative to the total number of APIs.",
                                "example": 0
                              },
                              "sdk": {
                                "type": "string",
                                "description": "SDK used by the API.",
                                "example": "Laravel"
                              },
                              "environment": {
                                "type": "string",
                                "description": "Deployment environment of the API.",
                                "example": "Production"
                              },
                              "score": {
                                "type": "integer",
                                "description": "Score assigned to the API.",
                                "example": 0
                              },
                              "is_favourited": {
                                "type": "boolean",
                                "description": "Indicates if the API is favourited.",
                                "example": false
                              },
                              "number_of_members": {
                                "type": "integer",
                                "description": "Number of members associated with the API.",
                                "example": 0
                              },
                              "updated_at": {
                                "type": "string",
                                "description": "Timestamp of the last update.",
                                "example": "2024-07-23T12:00:00Z"
                              }
                            },
                            "required": [
                              "name",
                              "api_url",
                              "total_requests",
                              "request_percentage",
                              "request_per_minute",
                              "request_per_minute_percentage",
                              "endpoint",
                              "endpoint_percentage",
                              "issues",
                              "issues_percentage",
                              "sdk",
                              "environment",
                              "score",
                              "is_favourited",
                              "number_of_members",
                              "updated_at"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request parameters.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}": {
        "get": {
          "operationId": "getApiById",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve a specific API by its ID within a workspace.",
          "description": "Fetches detailed information about a specific API identified by `apiId` within the given `workspaceId`. This endpoint provides comprehensive details including metrics and governance scores.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace."
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API."
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved API data",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "API data retrieved successfully.",
                        "description": "Confirmation message indicating successful retrieval of the API data."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the API.",
                            "example": "api123"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the resource.",
                            "example": "api"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the API.",
                                "example": "User Service API"
                              },
                              "api_url": {
                                "type": "string",
                                "format": "url",
                                "description": "Base URL of the API.",
                                "example": "https://api.example.com/user"
                              },
                              "total_requests": {
                                "type": "integer",
                                "description": "Total number of requests made to the API.",
                                "example": 1200
                              },
                              "request_percentage": {
                                "type": "integer",
                                "description": "Percentage of total requests relative to the workspace.",
                                "example": 25
                              },
                              "request_per_minute": {
                                "type": "integer",
                                "description": "Number of requests per minute.",
                                "example": 30
                              },
                              "request_per_minute_percentage": {
                                "type": "integer",
                                "description": "Percentage of requests per minute relative to the benchmark.",
                                "example": 10
                              },
                              "endpoint": {
                                "type": "integer",
                                "description": "Number of endpoints in the API.",
                                "example": 5
                              },
                              "endpoint_percentage": {
                                "type": "integer",
                                "description": "Percentage of endpoints relative to a benchmark.",
                                "example": 15
                              },
                              "issues": {
                                "type": "integer",
                                "description": "Number of issues reported for the API.",
                                "example": 2
                              },
                              "issues_percentage": {
                                "type": "integer",
                                "description": "Percentage of issues relative to the total number of APIs.",
                                "example": 5
                              },
                              "sdk": {
                                "type": "string",
                                "description": "SDK used by the API.",
                                "example": "Laravel"
                              },
                              "environment": {
                                "type": "string",
                                "description": "Deployment environment of the API.",
                                "example": "Production"
                              },
                              "score": {
                                "type": "integer",
                                "description": "Score assigned to the API.",
                                "example": 85
                              },
                              "is_favourited": {
                                "type": "boolean",
                                "description": "Indicates if the API is favourited.",
                                "example": false
                              },
                              "number_of_members": {
                                "type": "integer",
                                "description": "Number of members associated with the API.",
                                "example": 10
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp of the last update.",
                                "example": "2024-07-23T12:00:00Z"
                              },
                              "governance": {
                                "type": "object",
                                "properties": {
                                  "score_percentage": {
                                    "type": "integer",
                                    "description": "Percentage score assigned based on governance criteria.",
                                    "example": 80
                                  },
                                  "grade": {
                                    "type": "string",
                                    "description": "Overall grade assigned to the API.",
                                    "example": "A"
                                  },
                                  "design_score": {
                                    "type": "integer",
                                    "description": "Score based on the design of the API.",
                                    "example": 90
                                  },
                                  "design_grade": {
                                    "type": "string",
                                    "description": "Grade based on the design score.",
                                    "example": "A"
                                  },
                                  "security_score": {
                                    "type": "integer",
                                    "description": "Score based on the security of the API.",
                                    "example": 85
                                  },
                                  "security_grade": {
                                    "type": "string",
                                    "description": "Grade based on the security score.",
                                    "example": "B"
                                  },
                                  "performance_score": {
                                    "type": "integer",
                                    "description": "Score based on the performance of the API.",
                                    "example": 80
                                  },
                                  "performance_grade": {
                                    "type": "string",
                                    "description": "Grade based on the performance score.",
                                    "example": "B"
                                  }
                                },
                                "required": [
                                  "score_percentage",
                                  "grade",
                                  "design_score",
                                  "design_grade",
                                  "security_score",
                                  "security_grade",
                                  "performance_score",
                                  "performance_grade"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "api_url",
                              "total_requests",
                              "request_percentage",
                              "request_per_minute",
                              "request_per_minute_percentage",
                              "endpoint",
                              "endpoint_percentage",
                              "issues",
                              "issues_percentage",
                              "sdk",
                              "environment",
                              "score",
                              "is_favourited",
                              "number_of_members",
                              "updated_at",
                              "governance"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid API ID or workspace ID.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "API not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "API not found.",
                        "description": "Error message indicating that the API was not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "updateApiById",
          "tags": [
            "workspaces"
          ],
          "summary": "Update a specific API by its ID within a workspace.",
          "description": "Updates details of a specific API identified by `apiId` within the given `workspaceId`. You can modify attributes such as name, API URL, SDK, and environment.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace."
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API."
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Updated name of the API.",
                      "example": "Updated User Service API"
                    },
                    "api_url": {
                      "type": "string",
                      "format": "url",
                      "maxLength": 200,
                      "description": "Updated base URL of the API.",
                      "example": "https://api.example.com/updated-user"
                    },
                    "environment": {
                      "type": "string",
                      "enum": [
                        "Development",
                        "Staging",
                        "Production"
                      ],
                      "description": "Deployment environment of the API.",
                      "example": "Staging"
                    },
                    "sdk": {
                      "type": "string",
                      "enum": [
                        "Laravel",
                        "Php",
                        "Node",
                        "Actix",
                        "Adonis",
                        "Cloudflare",
                        "Directus",
                        "Django",
                        "Express",
                        "Fastify",
                        "Go",
                        "Koa",
                        "Lumen",
                        "NetCore",
                        "Net",
                        "RubyRails",
                        "Rust",
                        "Sails",
                        "Spring",
                        "Strapi",
                        "Symfony",
                        "Traefik"
                      ],
                      "description": "Updated SDK used by the API.",
                      "example": "Django"
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "time_period": {
                          "type": "string",
                          "description": "Filter for time period data if applicable.",
                          "example": "2024-Q2"
                        }
                      },
                      "description": "Additional filter parameters if applicable."
                    }
                  },
                  "required": [
                    "name",
                    "api_url",
                    "environment",
                    "sdk"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated API data",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating successful update of the API data.",
                        "example": "API data updated successfully."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the API.",
                            "example": "api123"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the resource.",
                            "example": "api"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Updated name of the API.",
                                "example": "Updated User Service API"
                              },
                              "api_url": {
                                "type": "string",
                                "format": "url",
                                "description": "Updated base URL of the API.",
                                "example": "https://api.example.com/updated-user"
                              },
                              "total_requests": {
                                "type": "integer",
                                "description": "Total number of requests made to the API.",
                                "example": 1300
                              },
                              "request_percentage": {
                                "type": "integer",
                                "description": "Percentage of total requests relative to the workspace.",
                                "example": 30
                              },
                              "request_per_minute": {
                                "type": "integer",
                                "description": "Number of requests per minute.",
                                "example": 35
                              },
                              "request_per_minute_percentage": {
                                "type": "integer",
                                "description": "Percentage of requests per minute relative to the benchmark.",
                                "example": 12
                              },
                              "endpoint": {
                                "type": "integer",
                                "description": "Number of endpoints in the API.",
                                "example": 6
                              },
                              "endpoint_percentage": {
                                "type": "integer",
                                "description": "Percentage of endpoints relative to a benchmark.",
                                "example": 18
                              },
                              "issues": {
                                "type": "integer",
                                "description": "Number of issues reported for the API.",
                                "example": 1
                              },
                              "issues_percentage": {
                                "type": "integer",
                                "description": "Percentage of issues relative to the total number of APIs.",
                                "example": 3
                              },
                              "sdk": {
                                "type": "string",
                                "description": "Updated SDK used by the API.",
                                "example": "Django"
                              },
                              "environment": {
                                "type": "string",
                                "description": "Updated deployment environment of the API.",
                                "example": "Staging"
                              },
                              "score": {
                                "type": "integer",
                                "description": "Updated score assigned to the API.",
                                "example": 88
                              },
                              "is_favourited": {
                                "type": "boolean",
                                "description": "Indicates if the API is favourited.",
                                "example": true
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp of the last update.",
                                "example": "2024-07-23T13:00:00Z"
                              },
                              "number_of_members": {
                                "type": "integer",
                                "description": "Number of members associated with the API.",
                                "example": 12
                              },
                              "governance": {
                                "type": "object",
                                "properties": {
                                  "score_percentage": {
                                    "type": "integer",
                                    "description": "Percentage score assigned based on governance criteria.",
                                    "example": 85
                                  },
                                  "grade": {
                                    "type": "string",
                                    "description": "Overall grade assigned to the API.",
                                    "example": "A"
                                  },
                                  "design_score": {
                                    "type": "integer",
                                    "description": "Score based on the design of the API.",
                                    "example": 92
                                  },
                                  "design_grade": {
                                    "type": "string",
                                    "description": "Grade based on the design score.",
                                    "example": "A"
                                  },
                                  "security_score": {
                                    "type": "integer",
                                    "description": "Score based on the security of the API.",
                                    "example": 88
                                  },
                                  "security_grade": {
                                    "type": "string",
                                    "description": "Grade based on the security score.",
                                    "example": "B"
                                  },
                                  "performance_score": {
                                    "type": "integer",
                                    "description": "Score based on the performance of the API.",
                                    "example": 82
                                  },
                                  "performance_grade": {
                                    "type": "string",
                                    "description": "Grade based on the performance score.",
                                    "example": "B"
                                  }
                                },
                                "required": [
                                  "score_percentage",
                                  "grade",
                                  "design_score",
                                  "design_grade",
                                  "security_score",
                                  "security_grade",
                                  "performance_score",
                                  "performance_grade"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "api_url",
                              "total_requests",
                              "request_percentage",
                              "request_per_minute",
                              "request_per_minute_percentage",
                              "endpoint",
                              "endpoint_percentage",
                              "issues",
                              "issues_percentage",
                              "sdk",
                              "environment",
                              "score",
                              "is_favourited",
                              "number_of_members",
                              "updated_at",
                              "governance"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid API ID or workspace ID.",
                        "description": "Error message indicating that the request parameters are invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "API not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "API not found.",
                        "description": "Error message indicating that the API was not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating an internal server issue."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/endpoint-groups": {
        "get": {
          "operationId": "1699a8fd-9527-4bc9-b577-462366ce7a4b",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "GET /workspaces/{workspaceId}/apis/{apiId}/endpoint-groups",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "endpoints": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "attributes": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "method": {
                                            "type": "string"
                                          },
                                          "version": {
                                            "type": "string"
                                          },
                                          "number_of_requests": {
                                            "type": "integer"
                                          },
                                          "number_of_requests_percentage": {
                                            "type": "integer"
                                          },
                                          "number_of_problems": {
                                            "type": "integer"
                                          },
                                          "request_per_minute": {
                                            "type": "integer"
                                          },
                                          "request_format": {
                                            "type": "string"
                                          },
                                          "alias": {
                                            "type": "string"
                                          },
                                          "request_schema": {
                                            "type": "object",
                                            "properties": {
                                              "method": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "response_code": {
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              },
                                              "threat_level": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "time_period": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "method",
                                              "response_code",
                                              "threat_level",
                                              "time_period"
                                            ]
                                          },
                                          "response_schema": {
                                            "type": "object",
                                            "properties": {
                                              "method": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "response_code": {
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              },
                                              "threat_level": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "time_period": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "method",
                                              "response_code",
                                              "threat_level",
                                              "time_period"
                                            ]
                                          },
                                          "average_load_time": {
                                            "type": "number"
                                          },
                                          "average_response_size": {
                                            "type": "integer"
                                          },
                                          "is_muted": {
                                            "type": "boolean"
                                          },
                                          "is_deleted": {
                                            "type": "boolean"
                                          },
                                          "is_public": {
                                            "type": "boolean"
                                          },
                                          "graph_data": {
                                            "type": "object",
                                            "properties": {
                                              "datapoint_per_intervals": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "day": {
                                                      "type": "string"
                                                    },
                                                    "date": {
                                                      "type": "string"
                                                    },
                                                    "request_count": {
                                                      "type": "integer"
                                                    },
                                                    "average_load_time": {
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "required": [
                                                    "day",
                                                    "date",
                                                    "request_count",
                                                    "average_load_time"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "datapoint_per_intervals"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "method",
                                          "version",
                                          "number_of_requests",
                                          "number_of_requests_percentage",
                                          "number_of_problems",
                                          "request_per_minute",
                                          "request_format",
                                          "alias",
                                          "request_schema",
                                          "response_schema",
                                          "average_load_time",
                                          "average_response_size",
                                          "is_muted",
                                          "is_deleted",
                                          "is_public",
                                          "graph_data"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "endpoints"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid API ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": " not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": " not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/endpoints": {
        "get": {
          "operationId": "ac6119a9-61bf-4397-b54a-9a0de2046e82",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace.",
                "example": "workspace456"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API within the workspace.",
                "example": "api789"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved endpoints for the specified API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating successful retrieval of endpoints.",
                        "example": "Endpoints retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/EndpointResource"
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of endpoints available.",
                            "example": 50
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of endpoints returned in the current response.",
                            "example": 20
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of endpoints returned per page.",
                            "example": 20
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages.",
                            "example": 3
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "/workspaces/workspace456/apis/api789/endpoints?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "/workspaces/workspace456/apis/api789/endpoints?page=3"
                          }
                        }
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to malformed or incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating what went wrong with the request.",
                        "example": "Invalid API ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The requested resource was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating that the resource was not found.",
                        "example": "Endpoint not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "An internal server error occurred.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating an internal server error.",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/endpoints/{endpointId}": {
        "patch": {
          "operationId": "0d7a70ed-36e0-4e94-bd29-40d4bdefc312",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "endpointId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "time_period": {
                          "type": "string"
                        }
                      }
                    },
                    "is_public": {
                      "type": "boolean"
                    },
                    "is_muted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "PATCH /workspaces/{workspaceId}/apis/{apiId}/endpoints/{endpointId}",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/EndpointResource"
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid endpoint ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Endpoint not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Endpoint not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "get": {
          "operationId": "fa342d59-4b7a-44de-a200-5fe71267253e",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "endpointId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "GET /workspaces/{workspaceId}/apis/{apiId}/endpoints/{endpointId}",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/EndpointResource"
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid endpoint ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Endpoint not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Endpoint not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/favourite": {
        "post": {
          "operationId": "fef115cc-bc37-4875-a2b0-562ffa2966fc",
          "tags": [
            "workspaces"
          ],
          "summary": "Mark an API as a favorite within a specific workspace",
          "description": "This endpoint allows you to mark a particular API as a favorite within a given workspace. The `workspaceId` and `apiId` are required to specify the target workspace and API. On success, it returns a confirmation message and the updated list of favorite APIs for the workspace.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace where the API should be marked as a favorite.",
                "example": "workspace456"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API to be marked as a favorite.",
                "example": "api789"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully marked the API as a favorite and retrieved the updated list of favorites.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating the API was successfully marked as a favorite.",
                        "example": "API marked as favorite successfully."
                      },
                      "data": {
                        "type": "array",
                        "description": "List of API IDs currently marked as favorites in the workspace.",
                        "items": {
                          "type": "string",
                          "description": "API ID of a favorite API.",
                          "example": "api789"
                        }
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to malformed or incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating what went wrong with the request.",
                        "example": "Invalid API ID or workspace ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or API was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating that the specified workspace or API was not found.",
                        "example": "Workspace or API not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "An internal server error occurred.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating an internal server error.",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/filters": {
        "get": {
          "operationId": "f4058a14-ce50-479c-a9a2-810547f816a9",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve a list of filters for a specific API within a workspace",
          "description": "This endpoint retrieves a list of filters associated with a specified API within a given workspace. The filters are grouped by their names and include details about each filter. It supports pagination, and the response includes metadata about the pagination status.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace where the API's filters are to be retrieved.",
                "example": "workspace123"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API whose filters are being requested.",
                "example": "api456"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the list of filters for the specified API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating that the filters were successfully retrieved.",
                        "example": "Filters retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "description": "List of filters associated with the specified API.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the filter group.",
                              "example": "Status"
                            },
                            "filters": {
                              "type": "array",
                              "description": "List of individual filters within the filter group.",
                              "items": {
                                "type": "string",
                                "description": "Name of a filter within the filter group.",
                                "example": "Active"
                              }
                            }
                          },
                          "required": [
                            "name",
                            "filters"
                          ]
                        }
                      },
                      "meta": {
                        "type": "object",
                        "description": "Metadata about the pagination status.",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of filters available.",
                            "example": 50
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of filters returned in the current response.",
                            "example": 10
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of filters per page.",
                            "example": 10
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available.",
                            "example": 5
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "description": "Pagination links for navigating between pages.",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "/workspaces/workspace123/apis/api456/filters?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "/workspaces/workspace123/apis/api456/filters?page=5"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to malformed or incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating what went wrong with the request.",
                        "example": "Invalid workspace ID or API ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or API was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating that the specified workspace or API was not found.",
                        "example": "Workspace or API not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "An internal server error occurred.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating an internal server error.",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/flows": {
        "get": {
          "operationId": "9c323824-5164-46f5-b953-0e44eb1b577a",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve a list of flows for a specific API within a workspace",
          "description": "This endpoint retrieves a list of flows associated with a specified API within a given workspace. The response includes detailed information about each flow and supports pagination.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace where the API's flows are to be retrieved.",
                "example": "workspace123"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API whose flows are being requested.",
                "example": "api456"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the list of flows for the specified API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating that the flows were successfully retrieved.",
                        "example": "Flows retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "description": "List of flows associated with the specified API.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the flow.",
                              "example": "flow789"
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the flow.",
                              "example": "api_flow"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the flow.",
                                  "example": "User Authentication Flow"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Detailed description of the flow.",
                                  "example": "Flow for user authentication and authorization."
                                },
                                "number_of_endpoints": {
                                  "type": "integer",
                                  "description": "Number of endpoints involved in the flow.",
                                  "example": 5
                                },
                                "number_of_views": {
                                  "type": "integer",
                                  "description": "Number of views associated with the flow.",
                                  "example": 3
                                }
                              },
                              "required": [
                                "name",
                                "description",
                                "number_of_endpoints",
                                "number_of_views"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        }
                      },
                      "meta": {
                        "type": "object",
                        "description": "Metadata about the pagination status.",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of flows available.",
                            "example": 50
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of flows returned in the current response.",
                            "example": 10
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of flows per page.",
                            "example": 10
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available.",
                            "example": 5
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "description": "Pagination links for navigating between pages.",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "/workspaces/workspace123/apis/api456/flows?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "/workspaces/workspace123/apis/api456/flows?page=5"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to malformed or incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating what went wrong with the request.",
                        "example": "Invalid workspace ID or API ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or API was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating that the specified workspace or API was not found.",
                        "example": "Workspace or API not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "An internal server error occurred.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating an internal server error.",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "c56342f4-70fa-4747-8937-da10742c76b9",
          "tags": [
            "workspaces"
          ],
          "summary": "Create a new flow for a specific API within a workspace",
          "description": "This endpoint creates a new flow for a specified API within a given workspace. The request must include details such as the name and description of the flow.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace where the new flow will be created.",
                "example": "workspace123"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API to which the new flow will be added.",
                "example": "api456"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the new flow.",
                      "example": "User Authentication Flow"
                    },
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the new flow.",
                      "example": "Flow for user authentication and authorization."
                    }
                  },
                  "required": [
                    "name",
                    "description"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created a new flow for the specified API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating that the flow was successfully created.",
                        "example": "Flow created successfully."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the newly created flow.",
                            "example": "flow789"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the newly created flow.",
                            "example": "api_flow"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the new flow.",
                                "example": "User Authentication Flow"
                              },
                              "description": {
                                "type": "string",
                                "description": "Detailed description of the new flow.",
                                "example": "Flow for user authentication and authorization."
                              },
                              "number_of_endpoints": {
                                "type": "integer",
                                "description": "Number of endpoints involved in the new flow.",
                                "example": 5
                              },
                              "number_of_views": {
                                "type": "integer",
                                "description": "Number of views associated with the new flow.",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "description",
                              "number_of_endpoints",
                              "number_of_views"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to malformed or incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating what went wrong with the request.",
                        "example": "Invalid request parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or API was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating that the specified workspace or API was not found.",
                        "example": "Workspace or API not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "An internal server error occurred.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating an internal server error.",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/flows/{flowId}": {
        "get": {
          "operationId": "c0923e25-c1fb-43a9-9007-6d6600e1bce4",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve details of a specific flow within an API in a workspace",
          "description": "This endpoint retrieves detailed information about a specific flow identified by `flowId` within a given API and workspace. The response includes attributes such as the flow's name, description, and metrics.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace containing the API.",
                "example": "workspace123"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API to which the flow belongs.",
                "example": "api456"
              }
            },
            {
              "name": "flowId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the flow being retrieved.",
                "example": "flow789"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the details of the specified flow.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating that the flow details were successfully retrieved.",
                        "example": "Flow details retrieved successfully."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the flow.",
                            "example": "flow789"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the flow.",
                            "example": "api_flow"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the flow.",
                                "example": "User Authentication Flow"
                              },
                              "description": {
                                "type": "string",
                                "description": "Detailed description of the flow.",
                                "example": "Flow for user authentication and authorization."
                              },
                              "number_of_endpoints": {
                                "type": "integer",
                                "description": "Number of endpoints involved in the flow.",
                                "example": 5
                              },
                              "number_of_views": {
                                "type": "integer",
                                "description": "Number of views associated with the flow.",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "description",
                              "number_of_endpoints",
                              "number_of_views"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to malformed or incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating what went wrong with the request.",
                        "example": "Invalid request parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace, API, or flow was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating that the specified workspace, API, or flow was not found.",
                        "example": "Workspace, API, or flow not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "An internal server error occurred.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating an internal server error.",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "5f896712-bb30-4b74-b511-17f3e38ca5ef",
          "tags": [
            "workspaces"
          ],
          "summary": "Update a specific flow within an API in a workspace",
          "description": "This endpoint updates details of a specific flow identified by `flowId` within a given API and workspace. The request must include updated attributes such as the flow's name and description.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the workspace containing the API.",
                "example": "workspace123"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the API to which the flow belongs.",
                "example": "api456"
              }
            },
            {
              "name": "flowId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Unique identifier for the flow being updated.",
                "example": "flow789"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Updated name of the flow.",
                      "example": "Updated Authentication Flow"
                    },
                    "description": {
                      "type": "string",
                      "description": "Updated detailed description of the flow.",
                      "example": "Updated flow for user authentication and enhanced authorization."
                    }
                  },
                  "required": [
                    "name",
                    "description"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated the details of the specified flow.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message indicating that the flow details were successfully updated.",
                        "example": "Flow updated successfully."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the updated flow.",
                            "example": "flow789"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the updated flow.",
                            "example": "api_flow"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Updated name of the flow.",
                                "example": "Updated Authentication Flow"
                              },
                              "description": {
                                "type": "string",
                                "description": "Updated detailed description of the flow.",
                                "example": "Updated flow for user authentication and enhanced authorization."
                              },
                              "number_of_endpoints": {
                                "type": "integer",
                                "description": "Number of endpoints involved in the updated flow.",
                                "example": 6
                              },
                              "number_of_views": {
                                "type": "integer",
                                "description": "Number of views associated with the updated flow.",
                                "example": 4
                              }
                            },
                            "required": [
                              "name",
                              "description",
                              "number_of_endpoints",
                              "number_of_views"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to malformed or incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating what went wrong with the request.",
                        "example": "Invalid request parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace, API, or flow was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating that the specified workspace, API, or flow was not found.",
                        "example": "Workspace, API, or flow not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "An internal server error occurred.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating an internal server error.",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/flows/{flowId}/items": {
        "patch": {
          "operationId": "0b2f2a07-c59c-4302-baf6-631d9adff7d8",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "flow_items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "item_id": {
                            "type": "string"
                          },
                          "sort_order": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "item_id",
                          "sort_order"
                        ]
                      }
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "time_period": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "flow_items"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "PATCH /workspaces/{workspaceId}/apis/{apiId}/flows/{flowId}/items",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "sort_order": {
                                  "type": "integer"
                                },
                                "endpoint": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "attributes": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "method": {
                                          "type": "string"
                                        },
                                        "version": {
                                          "type": "string"
                                        },
                                        "number_of_requests": {
                                          "type": "integer"
                                        },
                                        "number_of_requests_percentage": {
                                          "type": "integer"
                                        },
                                        "number_of_problems": {
                                          "type": "integer"
                                        },
                                        "request_per_minute": {
                                          "type": "integer"
                                        },
                                        "request_format": {
                                          "type": "string"
                                        },
                                        "alias": {
                                          "type": "string"
                                        },
                                        "request_schema": {
                                          "type": "object",
                                          "properties": {
                                            "method": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "response_code": {
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            },
                                            "threat_level": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "time_period": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "method",
                                            "response_code",
                                            "threat_level",
                                            "time_period"
                                          ]
                                        },
                                        "response_schema": {
                                          "type": "object",
                                          "properties": {
                                            "method": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "response_code": {
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            },
                                            "threat_level": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "time_period": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "method",
                                            "response_code",
                                            "threat_level",
                                            "time_period"
                                          ]
                                        },
                                        "average_load_time": {
                                          "type": "number"
                                        },
                                        "average_response_size": {
                                          "type": "integer"
                                        },
                                        "is_muted": {
                                          "type": "boolean"
                                        },
                                        "is_deleted": {
                                          "type": "boolean"
                                        },
                                        "is_public": {
                                          "type": "boolean"
                                        },
                                        "graph_data": {
                                          "type": "object",
                                          "properties": {
                                            "datapoint_per_intervals": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "day": {
                                                    "type": "string"
                                                  },
                                                  "date": {
                                                    "type": "string"
                                                  },
                                                  "request_count": {
                                                    "type": "integer"
                                                  },
                                                  "average_load_time": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "required": [
                                                  "day",
                                                  "date",
                                                  "request_count",
                                                  "average_load_time"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "datapoint_per_intervals"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "method",
                                        "graph_data",
                                        "is_public",
                                        "is_deleted",
                                        "is_muted",
                                        "average_response_size",
                                        "avergae_load_time",
                                        "response_schema",
                                        "request_schema",
                                        "alias",
                                        "request_format",
                                        "request_per_minute",
                                        "number_of_problems",
                                        "number_of_requests_percentage",
                                        "number_of_requests",
                                        "version"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "sort_order",
                                "endpoint"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data",
                      "message"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": " not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": " not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "get": {
          "operationId": "6f14ed2b-2ff7-4f67-9485-78589544f44f",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "GET /workspaces/{workspaceId}/apis/{apiId}/flows/{flowId}/items",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "sort_order": {
                                  "type": "integer"
                                },
                                "endpoint": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "attributes": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "method": {
                                          "type": "string"
                                        },
                                        "version": {
                                          "type": "string"
                                        },
                                        "number_of_requests": {
                                          "type": "integer"
                                        },
                                        "number_of_requests_percentage": {
                                          "type": "integer"
                                        },
                                        "number_of_problems": {
                                          "type": "integer"
                                        },
                                        "request_per_minute": {
                                          "type": "integer"
                                        },
                                        "request_format": {
                                          "type": "string"
                                        },
                                        "alias": {
                                          "type": "string"
                                        },
                                        "request_schema": {
                                          "type": "object",
                                          "properties": {
                                            "method": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "response_code": {
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            },
                                            "threat_level": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "time_period": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "response_schema": {
                                          "type": "object",
                                          "properties": {
                                            "method": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "response_code": {
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            },
                                            "threat_level": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "time_period": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "average_load_time": {
                                          "type": "number"
                                        },
                                        "average_response_size": {
                                          "type": "integer"
                                        },
                                        "is_muted": {
                                          "type": "boolean"
                                        },
                                        "is_deleted": {
                                          "type": "boolean"
                                        },
                                        "is_public": {
                                          "type": "boolean"
                                        },
                                        "graph_data": {
                                          "type": "object",
                                          "properties": {
                                            "datapoint_per_intervals": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "day": {
                                                    "type": "string"
                                                  },
                                                  "date": {
                                                    "type": "string"
                                                  },
                                                  "request_count": {
                                                    "type": "integer"
                                                  },
                                                  "average_load_time": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "sort_order",
                                "endpoint"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer"
                          },
                          "count": {
                            "type": "integer"
                          },
                          "per_page": {
                            "type": "integer"
                          },
                          "current_page": {
                            "type": "integer"
                          },
                          "total_pages": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string"
                          },
                          "last": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": " not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": " not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "994bda30-db2b-427a-8e7b-770ed3ac19f4",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flowId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint_id": {
                      "type": "string"
                    },
                    "sort_order": {
                      "type": "integer"
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "time_period": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "endpoint_id",
                    "sort_order"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "POST /workspaces/{workspaceId}/apis/{apiId}/flows/{flowId}/items",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "sort_order": {
                                "type": "integer"
                              },
                              "endpoint": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "attributes": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string"
                                      },
                                      "method": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      },
                                      "number_of_requests": {
                                        "type": "integer"
                                      },
                                      "number_of_requests_percentage": {
                                        "type": "integer"
                                      },
                                      "number_of_problems": {
                                        "type": "integer"
                                      },
                                      "request_per_minute": {
                                        "type": "integer"
                                      },
                                      "request_format": {
                                        "type": "string"
                                      },
                                      "alias": {
                                        "type": "string"
                                      },
                                      "request_schema": {
                                        "type": "object",
                                        "properties": {
                                          "method": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "response_code": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          },
                                          "threat_level": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "time_period": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "method",
                                          "response_code",
                                          "threat_level",
                                          "time_period"
                                        ]
                                      },
                                      "response_schema": {
                                        "type": "object",
                                        "properties": {
                                          "method": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "response_code": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          },
                                          "threat_level": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "time_period": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "method",
                                          "response_code",
                                          "threat_level",
                                          "time_period"
                                        ]
                                      },
                                      "average_load_time": {
                                        "type": "number"
                                      },
                                      "average_response_size": {
                                        "type": "integer"
                                      },
                                      "is_muted": {
                                        "type": "boolean"
                                      },
                                      "is_deleted": {
                                        "type": "boolean"
                                      },
                                      "is_public": {
                                        "type": "boolean"
                                      },
                                      "graph_data": {
                                        "type": "object",
                                        "properties": {
                                          "datapoint_per_intervals": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "day": {
                                                  "type": "string"
                                                },
                                                "date": {
                                                  "type": "string"
                                                },
                                                "request_count": {
                                                  "type": "integer"
                                                },
                                                "average_load_time": {
                                                  "type": "integer"
                                                }
                                              },
                                              "required": [
                                                "date",
                                                "day",
                                                "request_count",
                                                "average_load_time"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "datapoint_per_intervals"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "method",
                                      "graph_data",
                                      "is_public",
                                      "is_deleted",
                                      "is_muted",
                                      "average_response_size",
                                      "avergae_load_time",
                                      "response_schema",
                                      "request_schema",
                                      "alias",
                                      "request_format",
                                      "request_per_minute",
                                      "number_of_problems",
                                      "number_of_requests_percentage",
                                      "number_of_requests",
                                      "version"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "type"
                                ]
                              }
                            },
                            "required": [
                              "sort_order",
                              "endpoint"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": " not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": " not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/governance": {
        "get": {
          "operationId": "c4a78029-8f6c-4091-8f32-8ccce6d3fe48",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve governance details for an API",
          "description": "This endpoint retrieves the governance details for a specific API within a workspace. It provides information such as the API's status, score, grade, and detailed categories with their respective scores and issues.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which governance details are being retrieved."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved governance details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the retrieval operation."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The unique identifier of the governance record."
                          },
                          "share_url": {
                            "type": "string",
                            "description": "URL for sharing the governance details."
                          },
                          "status": {
                            "type": "string",
                            "description": "Current status of the API governance."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the API governance report."
                          },
                          "base_url": {
                            "type": "string",
                            "description": "Base URL of the API."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the API governance."
                          },
                          "version": {
                            "type": "string",
                            "description": "Version of the API governance report."
                          },
                          "total_endpoints": {
                            "type": "integer",
                            "description": "Total number of endpoints in the API."
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Timestamp when the governance record was created."
                          },
                          "score_percentage": {
                            "type": "integer",
                            "description": "Overall score percentage of the API governance."
                          },
                          "is_ai_ready": {
                            "type": "boolean",
                            "description": "Indicates if the API is AI-ready."
                          },
                          "overall_top_percentage": {
                            "type": "integer",
                            "description": "Overall top percentage among APIs."
                          },
                          "industry_top_percentage": {
                            "type": "integer",
                            "description": "Top percentage within the industry."
                          },
                          "grade": {
                            "type": "string",
                            "description": "Grade assigned to the API governance."
                          },
                          "industry": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of industries related to the API."
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Title of the category."
                                },
                                "score_percentage": {
                                  "type": "integer",
                                  "description": "Score percentage for the category."
                                },
                                "grade": {
                                  "type": "string",
                                  "description": "Grade assigned to the category."
                                },
                                "total_issues": {
                                  "type": "integer",
                                  "description": "Total number of issues in the category."
                                },
                                "tests": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "Title of the test."
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "Description of the test."
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "Status of the test."
                                      }
                                    },
                                    "required": [
                                      "title",
                                      "description",
                                      "status"
                                    ]
                                  },
                                  "description": "List of tests conducted within the category."
                                }
                              },
                              "required": [
                                "title",
                                "score_percentage",
                                "grade",
                                "total_issues",
                                "tests"
                              ]
                            },
                            "description": "List of categories with details like score percentage, grade, and issues."
                          },
                          "technologies": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of technologies used in the API."
                          }
                        },
                        "required": [
                          "uuid",
                          "status",
                          "title",
                          "grade",
                          "categories",
                          "score_percentage",
                          "created_at",
                          "total_endpoints"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request.",
                        "description": "Error message indicating that the request was invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Resource not found.",
                        "description": "Error message indicating that the specified resource could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/heartbeat": {
        "get": {
          "operationId": "2f09ca97-30a4-4bea-9ba1-42668976d6b3",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve the heartbeat status of an API",
          "description": "This endpoint retrieves the heartbeat status of a specific API within a workspace. It provides metrics such as request counts, HTTP code points, load time points, and issue statistics. This information helps monitor the API's performance and health.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which the heartbeat status is being retrieved."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the heartbeat status of the API",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the heartbeat status retrieval."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the heartbeat record."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the heartbeat record."
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "graph_data": {
                                  "type": "object",
                                  "properties": {
                                    "datapoint_per_intervals": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "day": {
                                            "type": "string",
                                            "description": "Day of the data point."
                                          },
                                          "date": {
                                            "type": "string",
                                            "description": "Date of the data point."
                                          },
                                          "request_count": {
                                            "type": "integer",
                                            "description": "Number of requests during the interval."
                                          },
                                          "total_http_code_points": {
                                            "type": "integer",
                                            "description": "Total HTTP code points during the interval."
                                          },
                                          "total_load_time_points": {
                                            "type": "integer",
                                            "description": "Total load time points during the interval."
                                          }
                                        },
                                        "required": [
                                          "day",
                                          "date",
                                          "request_count",
                                          "total_http_code_points",
                                          "total_load_time_points"
                                        ]
                                      },
                                      "description": "Array of data points for graphing performance metrics over time."
                                    }
                                  },
                                  "description": "Graph data representing performance metrics."
                                },
                                "issues": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "type": "integer",
                                      "description": "Total number of issues reported."
                                    },
                                    "change_in_percentage": {
                                      "type": "integer",
                                      "description": "Percentage change in the number of issues compared to a previous period."
                                    }
                                  },
                                  "required": [
                                    "count",
                                    "change_in_percentage"
                                  ],
                                  "description": "Statistics related to issues reported for the API."
                                }
                              },
                              "required": [
                                "graph_data",
                                "issues"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "Array of heartbeat records containing metrics and issue statistics."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of heartbeat records available."
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of heartbeat records returned in the response."
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of records per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number in the paginated results."
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ],
                        "description": "Pagination metadata for the response."
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results."
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ],
                        "description": "Pagination links for navigating through pages of results."
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request.",
                        "description": "Error message indicating that the request was invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Resource not found.",
                        "description": "Error message indicating that the specified resource could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/invitations": {
        "get": {
          "operationId": "eebbcf5d-781b-467f-94fc-83c78152b16f",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve invitations for an API within a workspace",
          "description": "This endpoint retrieves a list of invitations for a specific API within a workspace. It includes details about the invited users, their statuses, roles, and associated workspace information.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which invitations are being retrieved."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved invitations for the API",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the invitation retrieval."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the invitation."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the invitation."
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "description": "Email address of the invited user."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Current status of the invitation (e.g., pending, accepted)."
                                },
                                "role": {
                                  "type": "string",
                                  "description": "Role assigned to the invited user."
                                },
                                "workspace": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique identifier of the workspace."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the workspace."
                                    },
                                    "number_of_members": {
                                      "type": "integer",
                                      "description": "Total number of members in the workspace."
                                    },
                                    "avatar": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "List of avatar image URLs for the workspace."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "number_of_members",
                                    "avatar"
                                  ],
                                  "description": "Details about the workspace associated with the invitation."
                                }
                              },
                              "required": [
                                "email",
                                "status",
                                "role",
                                "workspace"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "Array of invitations with details about each invitation."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of invitations available."
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of invitations returned in the response."
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of invitations per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number in the paginated results."
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ],
                        "description": "Pagination metadata for the response."
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results."
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ],
                        "description": "Pagination links for navigating through pages of results."
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request.",
                        "description": "Error message indicating that the request was invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Resource not found.",
                        "description": "Error message indicating that the specified resource could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "b066911f-9b98-4d3d-8d0c-ad676f1d453c",
          "tags": [
            "workspaces"
          ],
          "summary": "Create invitations for an API within a workspace",
          "description": "This endpoint allows you to create new invitations for a specific API within a workspace. You can provide email addresses and roles for the invited users. The invitations will be sent out based on the provided details.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which invitations are being created."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invitations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email address of the user to be invited."
                          },
                          "role": {
                            "type": "string",
                            "description": "Role to be assigned to the invited user."
                          }
                        },
                        "required": [
                          "email",
                          "role"
                        ],
                        "description": "Array of invitation objects containing email and role for each invited user."
                      },
                      "description": "Array of invitations to be created."
                    }
                  },
                  "required": [
                    "invitations"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created invitations",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the invitation creation."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "List of invitation IDs that were successfully created."
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of invitations available."
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of invitations returned in the response."
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of invitations per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number in the paginated results."
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ],
                        "description": "Pagination metadata for the response."
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results."
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ],
                        "description": "Pagination links for navigating through pages of results."
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid endpoint ID.",
                        "description": "Error message indicating that the request was invalid or the endpoint ID was incorrect."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Resource not found.",
                        "description": "Error message indicating that the specified resource could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/openapi": {
        "get": {
          "operationId": "48aa9e61-17b6-4168-a949-9f6050cab3cf",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "expires",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "signature",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "GET /workspaces/{workspaceId}/apis/{apiId}/openapi",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "openapi": {
                        "type": "string"
                      },
                      "info": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      },
                      "servers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "paths": {
                        "type": "object",
                        "properties": {
                          "/aliquam-eaque-aperiam-quo-fugit-eligendi-officiis": {
                            "type": "object",
                            "properties": {
                              "put": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/amet-dicta-quo-dolore-id-placeat-veniam-sed": {
                            "type": "object",
                            "properties": {
                              "patch": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/animi-aut-tempora-omnis-dolorem": {
                            "type": "object",
                            "properties": {
                              "put": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/animi-quas-et-consequuntur-mollitia-rem": {
                            "type": "object",
                            "properties": {
                              "head": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/delectus-quam-molestias-id-aspernatur-voluptatem-sint": {
                            "type": "object",
                            "properties": {
                              "post": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/delectus-reiciendis-ut-vitae-explicabo": {
                            "type": "object",
                            "properties": {
                              "get": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/deleniti-voluptas-saepe-molestiae-ut-quia-voluptas-aliquam": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/eveniet-nemo-tempora-quae-alias-et-maxime": {
                            "type": "object",
                            "properties": {
                              "patch": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/fugit-eum-blanditiis-qui-quia-perferendis": {
                            "type": "object",
                            "properties": {
                              "post": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/iusto-et-voluptas-voluptas-et-tenetur": {
                            "type": "object",
                            "properties": {
                              "delete": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/iusto-nemo-blanditiis-sint-aperiam-vel-tempora": {
                            "type": "object",
                            "properties": {
                              "patch": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/molestias-fugiat-voluptate-eos-quia-a-ullam": {
                            "type": "object",
                            "properties": {
                              "head": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/neque-ut-odit-soluta-dolorum-qui-facere-est": {
                            "type": "object",
                            "properties": {
                              "head": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/officiis-est-blanditiis-repellat-odio-voluptas-sapiente-quis": {
                            "type": "object",
                            "properties": {
                              "get": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/porro-explicabo-velit-cum-saepe-qui": {
                            "type": "object",
                            "properties": {
                              "patch": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/quaerat-quia-voluptas-maxime": {
                            "type": "object",
                            "properties": {
                              "put": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/qui-deleniti-debitis-sed-eos-sunt-sequi-sequi-modi": {
                            "type": "object",
                            "properties": {
                              "get": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/qui-expedita-tempora-eos-ea-asperiores-ut": {
                            "type": "object",
                            "properties": {
                              "patch": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/quidem-sed-excepturi-qui-consequatur-eum": {
                            "type": "object",
                            "properties": {
                              "head": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/quisquam-et-nihil-magnam-dolorem": {
                            "type": "object",
                            "properties": {
                              "head": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/quo-nesciunt-odio-mollitia-voluptatem-nesciunt": {
                            "type": "object",
                            "properties": {
                              "delete": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/recusandae-quo-quis-delectus-voluptatem-id": {
                            "type": "object",
                            "properties": {
                              "put": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/reiciendis-molestias-alias-velit-odit": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/rerum-vitae-distinctio-repudiandae-illum": {
                            "type": "object",
                            "properties": {
                              "put": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/saepe-assumenda-eaque-architecto-ipsum": {
                            "type": "object",
                            "properties": {
                              "get": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/sed-eos-officia-cumque-eos-et": {
                            "type": "object",
                            "properties": {
                              "delete": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/ut-quas-eos-tempora-et": {
                            "type": "object",
                            "properties": {
                              "get": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/vel-aut-suscipit-et-esse-beatae": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/vel-dolorem-assumenda-sapiente-repellat-deleniti-quo-error-dignissimos": {
                            "type": "object",
                            "properties": {
                              "get": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "/voluptatem-possimus-ab-et-cumque": {
                            "type": "object",
                            "properties": {
                              "post": {
                                "type": "object",
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "requestBody": {
                                    "type": "object",
                                    "properties": {
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/x-www-form-urlencoded": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "method": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "response_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "threat_level": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "type": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "time_period": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "responses": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "content": {
                                          "type": "object",
                                          "properties": {
                                            "application/json": {
                                              "type": "object",
                                              "properties": {
                                                "schema": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "properties": {
                                                        "method": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "response_code": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "threat_level": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "type": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "time_period": {
                                                          "type": "object",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/people": {
        "get": {
          "operationId": "ef31a154-d4fe-4bb9-9237-69d08143be66",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve a list of people associated with an API within a workspace",
          "description": "This endpoint retrieves a list of people associated with a specific API within a workspace. The response includes details such as the person's first name, username, email, avatar, and roles.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which people are being retrieved."
            },
            {
              "name": "filter[non-members]",
              "in": "query",
              "schema": {
                "type": "boolean"
              },
              "description": "For filtering those who are members of the workspace but not members of this API"
            },
            {
              "name": "filter[search]",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "For filtering by first_name, last_name, username and email"
            },
            {
              "name": "filter[role]",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "workspace_owner",
                  "workspace_member",
                  "api_owner",
                  "api_member"
                ]
              },
              "description": "For filtering by role."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the list of people associated with the API",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the retrieval operation."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the person."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of resource (e.g., 'person')."
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "description": "The first name of the person."
                                },
                                "username": {
                                  "type": "string",
                                  "description": "The username of the person."
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email address of the person."
                                },
                                "avatar": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of URLs for the person's avatar images."
                                },
                                "roles": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of roles assigned to the person."
                                }
                              },
                              "required": [
                                "first_name",
                                "email",
                                "avatar",
                                "roles"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "A list of people associated with the specified API."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total number of people associated with the API."
                          },
                          "count": {
                            "type": "integer",
                            "description": "The number of people returned in the current response."
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "The number of people returned per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "The current page number of the results."
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "The total number of pages available."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results."
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request.",
                        "description": "Error message indicating that the request was invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace or API not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Workspace or API not found.",
                        "description": "Error message indicating that the specified workspace or API could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/problems": {
        "get": {
          "operationId": "23210444-dacb-4d02-81d1-7c3640735896",
          "tags": [
            "problems"
          ],
          "summary": "Retrieve a list of problems associated with an API within a workspace",
          "description": "This endpoint retrieves a list of problems related to a specific API within a workspace. The response includes details such as problem path, occurrences, severity, and related graph data for visualizing occurrences over time.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which problems are being retrieved."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the list of problems associated with the API",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the retrieval operation."
                      },
                      "data": {
                        "type": "array",
                        "$ref": "#/components/schemas/ProblemResource",
                        "description": "A list of problems associated with the specified API."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total number of problems associated with the API."
                          },
                          "count": {
                            "type": "integer",
                            "description": "The number of problems returned in the current response."
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "The number of problems returned per page."
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "The current page number of the results."
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "The total number of pages available."
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results."
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results."
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request.",
                        "description": "Error message indicating that the request was invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace or API not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Workspace or API not found.",
                        "description": "Error message indicating that the specified workspace or API could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/problems/{problemId}": {
        "get": {
          "operationId": "getSingleProblem",
          "tags": [
            "problems"
          ],
          "summary": "Retrieves a single Problem",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "problemId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/ProblemResource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/requests": {
        "get": {
          "operationId": "45190a25-583b-46f9-8347-6dd09214fa04",
          "tags": [
            "Requests"
          ],
          "summary": "Retrieve API request details for a specific workspace and API.",
          "description": "Fetches a list of requests for a specific API within a workspace. Supports pagination, sorting, and filtering based on query parameters.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the API.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "description": "The number of items to return per page. Default is 10.",
              "schema": {
                "type": "string",
                "example": "10"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "description": "The page number to retrieve. Default is 1.",
              "schema": {
                "type": "string",
                "example": "1"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "description": "To sort by desc append '-' before the parameter. e.g. created_at for asc, -created_at for desc https://jsonapi.org/format/#fetching-sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created_at",
                  "path",
                  "method",
                  "endpoint_id",
                  "load_time",
                  "threat_level",
                  "device",
                  "location"
                ]
              }
            },
            {
              "name": "filter[location]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[ip_address]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[endpoints]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of endpoint ids"
              }
            },
            {
              "name": "filter[problems]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of problem ids"
              }
            },
            {
              "name": "filter[http_codes]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of http codes"
              }
            },
            {
              "name": "filter[method]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of http methods",
                "example": "Get,Post,Put"
              }
            },
            {
              "name": "filter[threat_level]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of threat levels",
                "example": "None,Low,Medium,High"
              }
            },
            {
              "name": "filter[device]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes a comma separated list of devices",
                "example": "Ios,Android,Desktop,Windows,Linux,Mac,Firefox,Chrome,Safari,Ie,Edge,Unknown"
              }
            },
            {
              "name": "filter[time_period]",
              "description": "To filter requests by the last hour for example",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Takes two values a unit and value. Allowed units include month, week, day and hour",
                "example": "hour,1"
              }
            },
            {
              "name": "filter[params]",
              "description": "To filter by request body",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[search]",
              "description": "To filter by path",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[is_healthy]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "filter[app_version]",
              "description": "To filter by the app name",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[has_comments]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "filter[date]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Y-m-d",
                "format": "date",
                "example": "2020-10-20"
              }
            },
            {
              "name": "filter[date_range]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Y-m-d H:i:s",
                "format": "date-time",
                "example": "2020-10-20 18:57:21"
              }
            },
            {
              "name": "filter[user_identifier]",
              "description": "To get all requests by a specific user",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A list of API requests for the specified workspace and API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message describing the response status.",
                        "example": "Requests retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/RequestResource"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/requests/{requestId}": {
        "get": {
          "operationId": "c6557e80-87b8-412d-adcf-80c31141107e",
          "tags": [
            "workspaces"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "requestId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "GET /workspaces/{workspaceId}/apis/{apiId}/requests/{requestId}",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/RequestResource"
                      }
                    },
                    "required": [
                      "data",
                      "message"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": " not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": " not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/requests/{requestId}/share": {
        "get": {
          "operationId": "getSharedRequestDetails",
          "tags": [
            "workspaces"
          ],
          "summary": "Retrieve shared request details",
          "description": "Fetches the details of a shared request including its metadata, user information, and endpoint data.",
          "parameters": [
            {
              "name": "expires",
              "in": "query",
              "description": "Optional query parameter to filter results based on expiration.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "signature",
              "in": "query",
              "description": "Optional query parameter to validate the request signature.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the API.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "requestId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the request.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful retrieval of shared request details.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the success of the request.",
                        "example": "Request details retrieved successfully."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the request.",
                            "example": "request123"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource.",
                            "example": "request"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path of the request.",
                                "example": "/api/v1/resource"
                              },
                              "http_code": {
                                "type": "integer",
                                "description": "The HTTP status code of the response.",
                                "example": 200
                              },
                              "method": {
                                "type": "string",
                                "description": "The HTTP method used for the request.",
                                "example": "GET"
                              },
                              "device": {
                                "type": "object",
                                "properties": {
                                  "source": {
                                    "type": "string",
                                    "description": "The source of the request.",
                                    "example": "Mobile"
                                  },
                                  "device": {
                                    "type": "string",
                                    "description": "The type of device used.",
                                    "example": "iPhone"
                                  },
                                  "app": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Applications involved in the request.",
                                    "example": [
                                      "App1",
                                      "App2"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "device",
                                  "app"
                                ]
                              },
                              "source": {
                                "type": "string",
                                "description": "The source of the request.",
                                "example": "Web"
                              },
                              "threat_level": {
                                "type": "string",
                                "description": "The threat level associated with the request.",
                                "example": "Low"
                              },
                              "has_auth": {
                                "type": "boolean",
                                "description": "Indicates whether authentication was used.",
                                "example": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The geographical location of the request.",
                                "example": "New York"
                              },
                              "latitude": {
                                "type": "number",
                                "description": "The latitude of the request's location.",
                                "example": 40.7128
                              },
                              "longitude": {
                                "type": "number",
                                "description": "The longitude of the request's location.",
                                "example": -74.006
                              },
                              "ip_address": {
                                "type": "string",
                                "description": "The IP address from which the request originated.",
                                "example": "192.168.1.1"
                              },
                              "app_name": {
                                "type": "string",
                                "description": "The name of the application making the request.",
                                "example": "MyApp"
                              },
                              "load_time": {
                                "type": "number",
                                "description": "The load time of the request in milliseconds.",
                                "example": 150
                              },
                              "response_size": {
                                "type": "integer",
                                "description": "The size of the response in bytes.",
                                "example": 1024
                              },
                              "request_url": {
                                "type": "string",
                                "description": "The full URL of the request.",
                                "example": "https://api.example.com/v1/resource"
                              },
                              "request_data": {
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "type": "string",
                                    "description": "The email address provided in the request.",
                                    "example": "user@example.com"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name provided in the request.",
                                    "example": "John Doe"
                                  },
                                  "password": {
                                    "type": "string",
                                    "description": "The password provided in the request.",
                                    "example": "securepassword"
                                  }
                                },
                                "required": [
                                  "email",
                                  "name",
                                  "password"
                                ]
                              },
                              "meta_data": {
                                "type": "object",
                                "properties": {
                                  "has_auth": {
                                    "type": "string",
                                    "description": "Indicates if authentication is used.",
                                    "example": "Yes"
                                  },
                                  "has_http2": {
                                    "type": "string",
                                    "description": "Indicates if HTTP/2 is used.",
                                    "example": "No"
                                  },
                                  "has_json": {
                                    "type": "string",
                                    "description": "Indicates if JSON is used.",
                                    "example": "Yes"
                                  },
                                  "has_problems": {
                                    "type": "string",
                                    "description": "Indicates if there were any problems with the request.",
                                    "example": "No"
                                  },
                                  "has_speed": {
                                    "type": "string",
                                    "description": "Indicates if speed is a concern.",
                                    "example": "Normal"
                                  }
                                },
                                "required": [
                                  "has_auth",
                                  "has_speed",
                                  "has_http2",
                                  "has_problems",
                                  "has_json"
                                ]
                              },
                              "security_data": {
                                "type": "object",
                                "properties": {
                                  "audit": {
                                    "type": "string",
                                    "description": "Audit information related to the request.",
                                    "example": "Passed"
                                  },
                                  "impact": {
                                    "type": "string",
                                    "description": "The impact assessment of the request.",
                                    "example": "Low"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The current security status of the request.",
                                    "example": "Secure"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the security data.",
                                    "example": "No issues detected."
                                  }
                                },
                                "required": [
                                  "audit",
                                  "impact",
                                  "status",
                                  "description"
                                ]
                              },
                              "number_of_comments": {
                                "type": "integer",
                                "description": "The number of comments associated with the request.",
                                "example": 5
                              },
                              "log_file": {
                                "type": "string",
                                "description": "The log file associated with the request.",
                                "example": "request.log"
                              },
                              "requested_at": {
                                "type": "string",
                                "description": "Timestamp of when the request was made.",
                                "example": "2024-07-24T12:34:56Z"
                              },
                              "request": {
                                "type": "object",
                                "properties": {
                                  "headers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "The headers of the request.",
                                    "example": [
                                      "Content-Type: application/json",
                                      "Authorization: Bearer token"
                                    ]
                                  },
                                  "authorization": {
                                    "type": "object",
                                    "properties": {
                                      "detected": {
                                        "type": "string",
                                        "description": "Authorization method detected.",
                                        "example": "Bearer Token"
                                      }
                                    },
                                    "required": [
                                      "detected"
                                    ]
                                  },
                                  "documentation": {
                                    "type": "object",
                                    "properties": {
                                      "email": {
                                        "type": "string",
                                        "description": "Email provided in the documentation.",
                                        "example": "user@example.com"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name provided in the documentation.",
                                        "example": "John Doe"
                                      }
                                    },
                                    "required": [
                                      "email",
                                      "name"
                                    ]
                                  }
                                },
                                "required": [
                                  "headers",
                                  "authorization",
                                  "documentation"
                                ]
                              },
                              "api": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The unique identifier of the API.",
                                    "example": "api123"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the API.",
                                    "example": "Example API"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "path",
                              "http_code",
                              "method",
                              "device",
                              "source",
                              "threat_level",
                              "has_auth",
                              "location",
                              "latitude",
                              "longitude",
                              "ip_address",
                              "app_name",
                              "load_time",
                              "response_size",
                              "request_url",
                              "request_data",
                              "meta_data",
                              "security_data",
                              "number_of_comments",
                              "log_file",
                              "requested_at",
                              "request",
                              "api"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad request due to invalid parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Details about the error.",
                        "example": "Invalid parameters provided."
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Request not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Details about the error.",
                        "example": "Request not found."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "shareRequest",
          "tags": [
            "workspaces"
          ],
          "summary": "Share a request",
          "description": "Shares a request with specified users or groups, optionally including expiration and signature validation.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the API.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "requestId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the request.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The details for sharing the request.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "duration": {
                      "type": "string",
                      "enum": [
                        "hour",
                        "day",
                        "week",
                        "month"
                      ]
                    }
                  },
                  "required": [
                    "duration"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Request successfully shared.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the success of the request.",
                        "example": "Request shared successfully."
                      },
                      "data": {
                        "type": "object"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "share": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": [
                      "message",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad request due to invalid input data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Details about the error.",
                        "example": "Invalid input data."
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Request not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Details about the error.",
                        "example": "Request not found."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/widgets": {
        "patch": {
          "operationId": "updateWidgets",
          "tags": [
            "Workspaces"
          ],
          "summary": "Update widget details and sorting order",
          "description": "Updates the details and sort order of widgets for a specific API within a workspace. You can also apply filters to this update request.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the API within the workspace.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "widgets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "widget_id": {
                            "type": "string",
                            "description": "The unique identifier of the widget.",
                            "example": "widget123"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The sort order of the widget, ranging from 1 to 15.",
                            "minimum": 1,
                            "maximum": 15,
                            "example": 2
                          }
                        },
                        "required": [
                          "widget_id",
                          "sort_order"
                        ]
                      },
                      "description": "An array of widgets to be updated with their respective sort orders."
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "time_period": {
                          "type": "string",
                          "description": "The time period for the filter to apply on the widgets.",
                          "example": "last_30_days"
                        }
                      }
                    }
                  },
                  "required": [
                    "widgets"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Widgets updated successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the success of the update.",
                        "example": "Widgets updated successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the updated widget.",
                              "example": "widget123"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the resource.",
                              "example": "widget"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the widget.",
                                  "example": "Response Time Widget"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "A description of the widget.",
                                  "example": "Displays response times across various regions."
                                },
                                "slug": {
                                  "type": "string",
                                  "description": "The slug identifier of the widget.",
                                  "example": "response-time"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "city": {
                                        "type": "string",
                                        "description": "City for which the data is collected.",
                                        "example": "New York"
                                      },
                                      "number_of_request": {
                                        "type": "integer",
                                        "description": "Number of requests made.",
                                        "example": 100
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Country for which the data is collected.",
                                        "example": "USA"
                                      },
                                      "filter_value": {
                                        "type": "string",
                                        "description": "Value of the applied filter.",
                                        "example": "High Traffic"
                                      },
                                      "result": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "Results of the widget data.",
                                          "example": [
                                            "10ms",
                                            "15ms"
                                          ]
                                        }
                                      },
                                      "device": {
                                        "type": "string",
                                        "description": "Device used for the data collection.",
                                        "example": "Mobile"
                                      },
                                      "percentage": {
                                        "type": "number",
                                        "description": "Percentage of the result.",
                                        "example": 75
                                      },
                                      "average_load_time": {
                                        "type": "integer",
                                        "description": "Average load time in milliseconds.",
                                        "example": 200
                                      },
                                      "best_load_time_percentage": {
                                        "type": "integer",
                                        "description": "Percentage of the best load time.",
                                        "example": 90
                                      },
                                      "worst_load_time_percentage": {
                                        "type": "integer",
                                        "description": "Percentage of the worst load time.",
                                        "example": 10
                                      }
                                    },
                                    "required": [
                                      "city",
                                      "number_of_request",
                                      "worst_load_time_percentage",
                                      "best_load_time_percentage",
                                      "average_load_time",
                                      "percentage",
                                      "device",
                                      "result",
                                      "filter_value",
                                      "country"
                                    ]
                                  },
                                  "description": "Data associated with the widget."
                                }
                              },
                              "required": [
                                "name",
                                "description",
                                "slug",
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "A list of updated widgets."
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters or data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the error.",
                        "example": "Invalid widget ID or sort order."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified API or workspace was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the requested resource was not found.",
                        "example": "Widgets not found for the specified API and workspace."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while updating the widgets."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "get": {
          "operationId": "getWidgets",
          "tags": [
            "Workspaces"
          ],
          "summary": "Retrieve widget details for a specific API and workspace",
          "description": "Fetches details of widgets associated with a specific API within a workspace, including filter options if provided.",
          "parameters": [
            {
              "name": "compare",
              "in": "query",
              "required": false,
              "description": "A flag or parameter for comparing widget data.",
              "schema": {
                "type": "string",
                "example": "true"
              }
            },
            {
              "name": "slug",
              "in": "query",
              "required": false,
              "description": "The slug identifier for filtering specific widgets.",
              "schema": {
                "type": "string",
                "example": "response-time"
              }
            },
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the API within the workspace.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Widgets retrieved successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the success of the retrieval.",
                        "example": "Widgets retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the widget.",
                              "example": "widget123"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the resource.",
                              "example": "widget"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the widget.",
                                  "example": "Response Time Widget"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "A description of the widget.",
                                  "example": "Displays response times across various regions."
                                },
                                "slug": {
                                  "type": "string",
                                  "description": "The slug identifier of the widget.",
                                  "example": "response-time"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "filter_value": {
                                        "type": "string",
                                        "description": "Value of the applied filter.",
                                        "example": "High Traffic"
                                      },
                                      "result": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "Results of the widget data.",
                                          "example": [
                                            "10ms",
                                            "15ms"
                                          ]
                                        }
                                      },
                                      "average_load_time": {
                                        "type": "integer",
                                        "description": "Average load time in milliseconds.",
                                        "example": 200
                                      },
                                      "best_load_time_percentage": {
                                        "type": "integer",
                                        "description": "Percentage of the best load time.",
                                        "example": 90
                                      },
                                      "worst_load_time_percentage": {
                                        "type": "integer",
                                        "description": "Percentage of the worst load time.",
                                        "example": 10
                                      }
                                    },
                                    "required": [
                                      "worst_load_time_percentage",
                                      "best_load_time_percentage",
                                      "average_load_time",
                                      "result",
                                      "filter_value"
                                    ]
                                  },
                                  "description": "Data associated with the widget."
                                }
                              },
                              "required": [
                                "name",
                                "description",
                                "slug",
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "A list of widgets with their details."
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters or data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the error.",
                        "example": "Invalid query parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified API or workspace was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the requested resource was not found.",
                        "example": "Widgets not found for the specified API and workspace."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while retrieving the widgets."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/widgets-list": {
        "get": {
          "operationId": "listWidgets",
          "tags": [
            "Workspaces"
          ],
          "summary": "List all widgets for a specific API and workspace",
          "description": "Retrieves a list of all widgets associated with a specific API within a workspace. This endpoint provides essential details for each widget, including its title, slug, and sort order.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the API within the workspace.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the list of widgets.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the success of the request.",
                        "example": "Widgets list retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the widget.",
                              "example": "widget123"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the resource.",
                              "example": "widget"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the widget.",
                                  "example": "Response Time Widget"
                                },
                                "slug": {
                                  "type": "string",
                                  "description": "The slug identifier of the widget.",
                                  "example": "response-time"
                                },
                                "sort_order": {
                                  "type": "integer",
                                  "description": "The sort order for displaying widgets.",
                                  "example": 1
                                }
                              },
                              "required": [
                                "title",
                                "slug",
                                "sort_order"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "A list of widgets associated with the specified API and workspace."
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid request parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified API or workspace was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the requested resource was not found.",
                        "example": "Widgets not found for the specified API and workspace."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while retrieving the widgets."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/widgets/{slug}": {
        "get": {
          "operationId": "retrieveWidgetData",
          "tags": [
            "Workspaces"
          ],
          "summary": "Retrieve widget data for a specific API and workspace",
          "description": "Fetches detailed information about a specific widget associated with an API within a workspace. You can optionally compare the data using the `compare` query parameter.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the API within the workspace.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "slug",
              "in": "path",
              "required": true,
              "description": "The unique slug identifier for the widget.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "compare",
              "in": "query",
              "required": false,
              "description": "Optional parameter to compare widget data with another period or metric.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved widget data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the success of the request.",
                        "example": "Widget data retrieved successfully."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the widget.",
                            "example": "widget123"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource.",
                            "example": "widget"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the widget.",
                                "example": "Response Size Widget"
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of the widget.",
                                "example": "Displays average response size and other metrics."
                              },
                              "slug": {
                                "type": "string",
                                "description": "The slug identifier of the widget.",
                                "example": "response-size"
                              },
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "filter_value": {
                                      "type": "string",
                                      "description": "The value used for filtering the data.",
                                      "example": "2024-Q1"
                                    },
                                    "average_response_size": {
                                      "type": "integer",
                                      "description": "The average response size for the filtered period.",
                                      "example": 1200
                                    },
                                    "best_response_size_percentage": {
                                      "type": "integer",
                                      "description": "The percentage of the best response size.",
                                      "example": 95
                                    },
                                    "worst_response_size_percentage": {
                                      "type": "integer",
                                      "description": "The percentage of the worst response size.",
                                      "example": 5
                                    },
                                    "result": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "date": {
                                            "type": "string",
                                            "description": "The date for the data record.",
                                            "example": "2024-07-15"
                                          },
                                          "number_of_request": {
                                            "type": "integer",
                                            "description": "The number of requests on the given date.",
                                            "example": 150
                                          },
                                          "average_response_size": {
                                            "type": "integer",
                                            "description": "The average response size for the given date.",
                                            "example": 1300
                                          },
                                          "minimum_response_size": {
                                            "type": "integer",
                                            "description": "The minimum response size on the given date.",
                                            "example": 800
                                          },
                                          "maximum_response_size": {
                                            "type": "integer",
                                            "description": "The maximum response size on the given date.",
                                            "example": 1800
                                          },
                                          "best_response_size_count": {
                                            "type": "integer",
                                            "description": "The count of best response sizes on the given date.",
                                            "example": 10
                                          },
                                          "worst_response_size_count": {
                                            "type": "integer",
                                            "description": "The count of worst response sizes on the given date.",
                                            "example": 5
                                          }
                                        },
                                        "required": [
                                          "date",
                                          "number_of_request",
                                          "average_response_size",
                                          "minimum_response_size",
                                          "maximum_response_size",
                                          "best_response_size_count",
                                          "worst_response_size_count"
                                        ]
                                      },
                                      "description": "A list of data records for the widget.",
                                      "example": [
                                        {
                                          "date": "2024-07-15",
                                          "number_of_request": 150,
                                          "average_response_size": 1300,
                                          "minimum_response_size": 800,
                                          "maximum_response_size": 1800,
                                          "best_response_size_count": 10,
                                          "worst_response_size_count": 5
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "filter_value",
                                    "average_response_size",
                                    "best_response_size_percentage",
                                    "worst_response_size_percentage",
                                    "result"
                                  ]
                                },
                                "description": "Detailed data for the widget based on filtering criteria."
                              }
                            },
                            "required": [
                              "name",
                              "description",
                              "slug",
                              "data"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters or query values.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid request parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The specified widget, API, or workspace was not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the requested resource was not found.",
                        "example": "Widget not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while retrieving the widget data."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/avatar": {
        "post": {
          "operationId": "uploadWorkspaceAvatar",
          "tags": [
            "Workspace Avatar"
          ],
          "summary": "Upload an avatar image for a workspace",
          "description": "Uploads an avatar image for the specified workspace. The image file should be sent as form data. This endpoint allows you to update the workspace's avatar.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace for which the avatar is being uploaded.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatar": {
                      "type": "string",
                      "format": "binary",
                      "description": "The avatar image file in binary format. Must be an image file (e.g., JPEG, PNG)."
                    }
                  },
                  "required": [
                    "avatar"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully uploaded the avatar image.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message confirming the successful upload of the avatar.",
                        "example": "Avatar uploaded successfully."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the workspace.",
                            "example": "workspace123"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource.",
                            "example": "workspace"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the workspace.",
                                "example": "Workspace ABC"
                              },
                              "treblle_api_token": {
                                "type": "string",
                                "description": "The API token for Treblle.",
                                "example": "abcd1234"
                              },
                              "number_of_employees": {
                                "type": "integer",
                                "description": "The number of employees in the workspace.",
                                "example": 50
                              },
                              "number_of_members": {
                                "type": "integer",
                                "description": "The number of members in the workspace.",
                                "example": 30
                              },
                              "avatar": {
                                "type": "object",
                                "properties": {
                                  "file_name": {
                                    "type": "string",
                                    "description": "The name of the uploaded avatar file.",
                                    "example": "workspace_avatar.png"
                                  },
                                  "small": {
                                    "type": "string",
                                    "description": "URL to the small version of the avatar image.",
                                    "example": "https://example.com/avatars/small/workspace_avatar.png"
                                  },
                                  "big": {
                                    "type": "string",
                                    "description": "URL to the large version of the avatar image.",
                                    "example": "https://example.com/avatars/big/workspace_avatar.png"
                                  }
                                },
                                "required": [
                                  "file_name",
                                  "small",
                                  "big"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "number_of_members",
                              "treblle_api_token",
                              "number_of_employees",
                              "avatar"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect file or parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid file format or missing required fields."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the workspace was not found.",
                        "example": "Workspace not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while uploading the avatar."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "deleteWorkspaceAvatar",
          "tags": [
            "Workspace Avatar"
          ],
          "summary": "Delete workspace avatar",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace for which the avatar is being uploaded.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspaces/{workspaceId}/heartbeat": {
        "get": {
          "operationId": "getWorkspaceHeartbeat",
          "tags": [
            "Workspaces"
          ],
          "summary": "Retrieve workspace heartbeat data",
          "description": "Fetches heartbeat data for the specified workspace. This includes performance metrics and issue statistics, useful for monitoring workspace health.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace for which heartbeat data is being retrieved.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved workspace heartbeat data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message confirming the successful retrieval of the heartbeat data.",
                        "example": "Heartbeat data retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the heartbeat data record.",
                              "example": "heartbeat123"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the resource.",
                              "example": "heartbeat"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "graph_data": {
                                  "type": "object",
                                  "properties": {
                                    "datapoint_per_intervals": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "day": {
                                            "type": "string",
                                            "description": "The day of the data point.",
                                            "example": "Monday"
                                          },
                                          "date": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "The date of the data point.",
                                            "example": "2024-07-22"
                                          },
                                          "request_count": {
                                            "type": "integer",
                                            "description": "The number of requests made on this day.",
                                            "example": 150
                                          },
                                          "total_http_code_points": {
                                            "type": "integer",
                                            "description": "The total HTTP status code points recorded.",
                                            "example": 20
                                          },
                                          "total_load_time_points": {
                                            "type": "integer",
                                            "description": "The total load time points recorded.",
                                            "example": 3000
                                          }
                                        },
                                        "required": [
                                          "day",
                                          "date",
                                          "request_count",
                                          "total_http_code_points",
                                          "total_load_time_points"
                                        ]
                                      },
                                      "description": "Array of data points representing performance metrics over time."
                                    }
                                  },
                                  "required": [
                                    "datapoint_per_intervals"
                                  ]
                                },
                                "issues": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "type": "integer",
                                      "description": "The total number of issues detected.",
                                      "example": 5
                                    },
                                    "change_in_percentage": {
                                      "type": "integer",
                                      "description": "The percentage change in issues compared to the previous period.",
                                      "example": 10
                                    }
                                  },
                                  "required": [
                                    "count",
                                    "change_in_percentage"
                                  ]
                                }
                              },
                              "required": [
                                "graph_data",
                                "issues"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "Array of heartbeat data records with performance metrics and issue statistics."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total number of heartbeat data records.",
                            "example": 20
                          },
                          "count": {
                            "type": "integer",
                            "description": "The number of heartbeat data records returned in the current response.",
                            "example": 10
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "The number of records per page.",
                            "example": 10
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "The current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "The total number of pages available.",
                            "example": 2
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "https://api.example.com/workspaces/workspace123/heartbeat?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "https://api.example.com/workspaces/workspace123/heartbeat?page=2"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters or data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid request parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the workspace was not found.",
                        "example": "Workspace not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while retrieving the heartbeat data."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/invitations": {
        "get": {
          "operationId": "getWorkspaceInvitations",
          "tags": [
            "Workspaces"
          ],
          "summary": "Retrieve all invitations for a workspace",
          "description": "Fetches a list of invitations for the specified workspace. Includes details about each invitation and pagination metadata.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace for which invitations are being retrieved.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the list of invitations.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message confirming the retrieval of invitations.",
                        "example": "Invitations retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the invitation.",
                              "example": "invitation123"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the resource.",
                              "example": "invitation"
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "format": "email",
                                  "description": "The email address of the person invited.",
                                  "example": "john.doe@example.com"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The current status of the invitation.",
                                  "example": "Pending"
                                },
                                "role": {
                                  "type": "string",
                                  "description": "The role assigned to the person being invited.",
                                  "example": "Member"
                                },
                                "workspace": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The unique identifier of the workspace.",
                                      "example": "workspace123"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the workspace.",
                                      "example": "Workspace A"
                                    },
                                    "number_of_members": {
                                      "type": "integer",
                                      "description": "The total number of members in the workspace.",
                                      "example": 10
                                    },
                                    "avatar": {
                                      "type": "object",
                                      "properties": {
                                        "file_name": {
                                          "type": "string",
                                          "description": "The file name of the workspace avatar image.",
                                          "example": "workspace_avatar.png"
                                        },
                                        "small": {
                                          "type": "string",
                                          "description": "URL to the small version of the workspace avatar.",
                                          "example": "https://example.com/avatars/small_workspace_avatar.png"
                                        },
                                        "big": {
                                          "type": "string",
                                          "description": "URL to the large version of the workspace avatar.",
                                          "example": "https://example.com/avatars/big_workspace_avatar.png"
                                        }
                                      },
                                      "required": [
                                        "file_name",
                                        "small",
                                        "big"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "number_of_members",
                                    "avatar"
                                  ]
                                }
                              },
                              "required": [
                                "email",
                                "status",
                                "role",
                                "workspace"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "Array of invitations with detailed information."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total number of invitations.",
                            "example": 50
                          },
                          "count": {
                            "type": "integer",
                            "description": "The number of invitations returned in the current response.",
                            "example": 10
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "The number of invitations per page.",
                            "example": 10
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "The current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "The total number of pages available.",
                            "example": 5
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "https://api.example.com/workspaces/workspace123/invitations?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "https://api.example.com/workspaces/workspace123/invitations?page=5"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters or data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid workspace ID."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the workspace was not found.",
                        "example": "Workspace not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while retrieving the invitations."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "createInvitations",
          "tags": [
            "Workspaces"
          ],
          "summary": "Send invitations to users",
          "description": "Sends invitations to users for the specified workspace. Each invitation includes the user's email and assigned role.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace where invitations are to be sent.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "description": "The details of the invitations to be sent, including the recipient's email and role.",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invitations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "The email address of the person being invited.",
                            "example": "jane.doe@example.com"
                          },
                          "role": {
                            "type": "string",
                            "description": "The role assigned to the person being invited.",
                            "enum": [
                              "Owner",
                              "Member"
                            ],
                            "example": "Member"
                          }
                        },
                        "required": [
                          "email",
                          "role"
                        ]
                      },
                      "description": "Array of invitation objects with email and role."
                    }
                  },
                  "required": [
                    "invitations"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully sent invitations.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message confirming the invitations were sent.",
                        "example": "Invitations sent successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "List of identifiers for the invitations that were sent.",
                          "example": [
                            "invitation123",
                            "invitation124"
                          ]
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total number of invitations sent.",
                            "example": 2
                          },
                          "count": {
                            "type": "integer",
                            "description": "The number of invitations included in the response.",
                            "example": 2
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "The number of invitations per page.",
                            "example": 10
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "The current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "The total number of pages available.",
                            "example": 1
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "https://api.example.com/workspaces/workspace123/invitations?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "https://api.example.com/workspaces/workspace123/invitations?page=1"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters or data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid email format or role."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating that the workspace was not found.",
                        "example": "Workspace not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while sending the invitations."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/people": {
        "get": {
          "operationId": "listWorkspacePeople",
          "tags": [
            "Workspaces"
          ],
          "summary": "Retrieve people associated with a workspace",
          "description": "Fetches a list of people associated with a specific workspace, including their details and metadata about the results.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace for which the associated people are being retrieved.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful retrieval of people associated with the workspace.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message confirming the successful retrieval of the people.",
                        "example": "People associated with the workspace have been retrieved successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the person."
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the entity (e.g., user, admin)."
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "description": "First name of the person.",
                                  "example": "John"
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username of the person.",
                                  "example": "john_doe"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email address of the person.",
                                  "example": "john.doe@example.com"
                                },
                                "avatar": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "URL to the avatar images of the person.",
                                    "example": [
                                      "https://example.com/avatar1.jpg"
                                    ]
                                  },
                                  "description": "List of URLs for avatar images."
                                },
                                "roles": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Roles assigned to the person within the workspace.",
                                    "example": [
                                      "admin",
                                      "member"
                                    ]
                                  },
                                  "description": "List of roles assigned to the person."
                                }
                              },
                              "required": [
                                "first_name",
                                "username",
                                "email",
                                "avatar",
                                "roles"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "attributes"
                          ]
                        },
                        "description": "Array of people associated with the workspace."
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "Total number of people associated with the workspace.",
                            "example": 100
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of people included in the current response.",
                            "example": 20
                          },
                          "per_page": {
                            "type": "integer",
                            "description": "Number of people per page.",
                            "example": 20
                          },
                          "current_page": {
                            "type": "integer",
                            "description": "Current page number.",
                            "example": 1
                          },
                          "total_pages": {
                            "type": "integer",
                            "description": "Total number of pages available.",
                            "example": 5
                          }
                        },
                        "required": [
                          "total",
                          "count",
                          "per_page",
                          "current_page",
                          "total_pages"
                        ]
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "first": {
                            "type": "string",
                            "description": "URL to the first page of results.",
                            "example": "https://api.example.com/workspaces/{workspaceId}/people?page=1"
                          },
                          "last": {
                            "type": "string",
                            "description": "URL to the last page of results.",
                            "example": "https://api.example.com/workspaces/{workspaceId}/people?page=5"
                          }
                        },
                        "required": [
                          "first",
                          "last"
                        ]
                      }
                    },
                    "required": [
                      "message",
                      "data",
                      "meta",
                      "links"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request parameters or query.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid request parameters."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating the workspace was not found.",
                        "example": "Workspace not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while processing the request."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/transfer": {
        "post": {
          "operationId": "transferWorkspaceOwnership",
          "tags": [
            "Workspaces"
          ],
          "summary": "Transfer ownership of a workspace",
          "description": "Transfers the ownership of a specified workspace to the user with the provided email address. This endpoint is used to update the owner of a workspace.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace to which ownership will be transferred.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "description": "The email address of the new owner to whom the workspace will be transferred.",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "The email address of the new owner.",
                      "example": "newowner@example.com"
                    }
                  },
                  "required": [
                    "email"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful transfer of workspace ownership.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A confirmation message indicating the successful transfer.",
                        "example": "Workspace ownership has been successfully transferred."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "List of updated workspace information or related identifiers.",
                          "example": [
                            "workspaceId1",
                            "workspaceId2"
                          ]
                        },
                        "description": "Array of identifiers or relevant details about the workspace."
                      }
                    },
                    "required": [
                      "data",
                      "message"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request parameters or body.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid email address format."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace or user not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating the resource was not found.",
                        "example": "Workspace or user not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while processing the request."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/slack-channels": {
        "get": {
          "operationId": "getSlackChannels",
          "tags": [
            "Slack Channels"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/SlackChannelResource"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "createNewSlackChannel",
          "tags": [
            "Slack Channels"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackChannelRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/SlackChannelResource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/slack-channels/{channelId}": {
        "patch": {
          "operationId": "updateSlackChannel",
          "tags": [
            "Slack Channels"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channelId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackChannelRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/SlackChannelResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "deleteSlackChannel",
          "tags": [
            "Slack Channels"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channelId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspaces/{workspaceId}/people/{userId}": {
        "patch": {
          "operationId": "changeWorkspaceMemberRole",
          "tags": [
            "Workspace People"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Member",
                        "Owner"
                      ]
                    }
                  },
                  "required": [
                    "role"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "leaveWorkspace",
          "tags": [
            "Workspace People"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/people/{userId}": {
        "patch": {
          "operationId": "changeApiMemberRole",
          "tags": [
            "API People"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Member",
                        "Owner"
                      ]
                    }
                  },
                  "required": [
                    "role"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "leaveWorkspace",
          "tags": [
            "API People"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspaces/{workspaceId}/invitations/{invitationId}": {
        "get": {
          "operationId": "getSingleWorkspaceInvitation",
          "tags": [
            "Workspace invitations"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "invitationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/InvitationResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "updateInvitationStatus",
          "tags": [
            "Workspaces"
          ],
          "summary": "Update the status of an invitation",
          "description": "Updates the status of a specific invitation within a workspace. The choice can be either 'Accepted' or 'Declined'.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace containing the invitation.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "invitationId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the invitation whose status is being updated.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "description": "The choice indicating the user's response to the invitation.",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "choice": {
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "description": "The user's response to the invitation.",
                      "example": "Accepted"
                    }
                  },
                  "required": [
                    "choice"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated the invitation status.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message confirming the update of the invitation status.",
                        "example": "Invitation status updated successfully."
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "List of updated invitation identifiers or related details.",
                          "example": [
                            "invitationId1",
                            "invitationId2"
                          ]
                        },
                        "description": "Array of identifiers or relevant details about the updated invitation."
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request due to incorrect parameters or body.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message describing the nature of the error.",
                        "example": "Invalid choice value."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Workspace or invitation not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating the workspace or invitation was not found.",
                        "example": "Workspace or invitation not found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error while processing the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "A message indicating an internal server error.",
                        "example": "An internal server error occurred while processing the request."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/invitations/{invitationId}": {
        "get": {
          "operationId": "getSingleApiInvitation",
          "tags": [
            "API invitations"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiIId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "invitationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/InvitationResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "06c48dcc-d883-48cd-a9a5-ecb7b183a70c",
          "tags": [
            "workspaces"
          ],
          "summary": "Update an invitation for an API within a workspace",
          "description": "This endpoint allows you to update the status or details of a specific invitation for an API within a workspace. You can modify the invitation choice, such as accepting or declining the invitation.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which the invitation is being updated."
            },
            {
              "name": "invitationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the invitation being updated."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "choice": {
                      "type": "string",
                      "description": "The choice regarding the invitation, such as 'accept' or 'decline'."
                    }
                  },
                  "required": [
                    "choice"
                  ],
                  "description": "The updated choice for the invitation."
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated the invitation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the update operation."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "invitationId": {
                            "type": "string",
                            "description": "The unique identifier of the updated invitation."
                          },
                          "status": {
                            "type": "string",
                            "description": "The new status of the invitation."
                          }
                        },
                        "required": [
                          "invitationId",
                          "status"
                        ],
                        "description": "Details of the updated invitation."
                      }
                    },
                    "required": [
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid request.",
                        "description": "Error message indicating that the request was invalid."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Invitation not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invitation not found.",
                        "description": "Error message indicating that the specified invitation could not be found."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "9c1dc4ff-8594-4acf-b9a5-0036f1c43676",
          "tags": [
            "workspaces"
          ],
          "summary": "Delete an invitation for an API within a workspace",
          "description": "This endpoint allows you to delete a specific invitation for an API within a workspace. Once deleted, the invitation will no longer be available for acceptance or rejection.",
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the workspace containing the API."
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the API for which the invitation is being deleted."
            },
            {
              "name": "invitationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the invitation being deleted."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully deleted the invitation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating the result of the delete operation."
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Invitation not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A message indicating that the specified invitation could not be found."
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "An internal server error occurred.",
                        "description": "Error message indicating that an internal server error occurred."
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/sso-configurations": {
        "get": {
          "operationId": "getSsoConfigurations",
          "tags": [
            "SSO Configuration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/SSOConfigurationResource"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "storeSsoConfiguration",
          "tags": [
            "SSO Configuration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreSSOConfigurationRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/SSOConfigurationResource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/sso-configurations/{configurationId}": {
        "get": {
          "operationId": "getSingleSsoConfiguration",
          "tags": [
            "SSO Configuration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "configurationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/SSOConfigurationResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "updateSSOConfiguration",
          "tags": [
            "SSO Configuration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "configurationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreSSOConfigurationRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/SSOConfigurationResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "updateSSOConfiguration",
          "tags": [
            "SSO Configuration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "configurationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspaces/{workspaceId}/notifications": {
        "get": {
          "operationId": "getNotifications",
          "tags": [
            "Workspace Notifications"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "description": "The unique identifier of the workspace",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[read]",
              "in": "query",
              "description": "For filtering notifications by read or unread",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/NotificationResource"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "markAllNotificationsAsRead",
          "summary": "Endpoint for marking all notifications as read",
          "tags": [
            "Workspace Notifications"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/NotificationResource"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "deleteAllNotifications",
          "summary": "Delete all notifications",
          "tags": [
            "Workspace Notifications"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspaces/{workspaceId}/notifications/{notificationId}": {
        "patch": {
          "operationId": "markSingleNotification",
          "summary": "To mark a single notification as read or unread",
          "tags": [
            "Workspace Notifications"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "notificationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "Read",
                        "Unread"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/NotificationResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "deleteSingleNotification",
          "tags": [
            "Workspace Notifications"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "notificationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/documentation": {
        "get": {
          "operationId": "getApiDocumentation",
          "tags": [
            "API"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "endpoints": {
                                "type": "integer"
                              },
                              "load_time": {
                                "type": "number",
                                "format": "float"
                              },
                              "response_size": {
                                "type": "integer"
                              },
                              "governance": {
                                "type": "object",
                                "properties": {
                                  "score_percentage": {
                                    "type": "integer"
                                  },
                                  "grade": {
                                    "type": "string"
                                  }
                                }
                              },
                              "base_url": {
                                "type": "string"
                              },
                              "auth": {
                                "type": "object",
                                "nullable": true
                              },
                              "open_api_spec_url": {
                                "type": "string"
                              },
                              "is_published": {
                                "type": "boolean"
                              },
                              "catalog_id": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/docs-resources": {
        "get": {
          "operationId": "getDocsResources",
          "tags": [
            "Docs Resources"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/DocsResource"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "createDocsResource",
          "tags": [
            "Docs Resources"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "file_name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/DocsResource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/docs-resources/{resourceId}": {
        "delete": {
          "operationId": "deleteDocsResources",
          "tags": [
            "Docs Resources"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "resourceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "/workspace/{workspaceId}/apis/{apiId}/openapi": {
        "post": {
          "operationId": "uploadOpenApiSpec",
          "tags": [
            "OpenAPI"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "openapi_spec": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/upload-urls": {
        "post": {
          "operationId": "createAnUploadUrl",
          "tags": [
            "Misc"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file_names": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "model_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "upload_urls": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workspaces/{workspaceId}/apis/{apiId}/custom-alerts": {
        "get": {
          "operationId": "getAllCustomAlerts",
          "tags": [
            "Custom Alerts"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter[is_enabled]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Allowed sorts: name, is_enabled, created_at, updated_at"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CustomAlertResource"
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "$ref": "#/components/schema/Pagination"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schema/Links"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "createCustomAlert",
          "tags": [
            "Custom Alerts"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAlertRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/CustomAlertResource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "workspaces/{workspaceId}/apis/{apiId}/custom-alerts/{customAlertId}": {
        "patch": {
          "operationId": "updateCusomAlert",
          "tags": [
            "Custom Alerts"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "customAlertId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAlertRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/CustomAlertResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "deleteCustomAlert",
          "tags": [
            "Custom Alerts"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "customAlertId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      },
      "workspaces/{workspaceId}/apis/{apiId}/saved-searches": {
        "get": {
          "operationId": "getAllSavedSearches",
          "tags": [
            "Saved  Search"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/SavedSearchResource"
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "$ref": "#/components/schema/Pagination"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schema/Links"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "createSavedSearch",
          "tags": [
            "Saved  Search"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedSearchRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/SavedSearchesource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "workspaces/{workspaceId}/apis/{apiId}/saved-searches/{searchId}": {
        "patch": {
          "operationId": "updateSavedSearch",
          "tags": [
            "Saved  Search"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedSearchRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/SavedSearchResource"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "deleteSavedSearch",
          "tags": [
            "Saved  Search"
          ],
          "parameters": [
            {
              "name": "workspaceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "apiId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "204": {
              "description": "No content, operation successful"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "SlackChannelRequest": {
          "title": "SlackChannelRequest",
          "required": [
            "webhook_url",
            "channel"
          ],
          "properties": {
            "webhook_url": {
              "type": "string"
            },
            "channel": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "SlackChannelResource": {
          "title": "SlackChannelResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "webhook_url": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                }
              }
            }
          }
        },
        "InvitationResource": {
          "title": "InvitationResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "api_id": {
                  "type": "string",
                  "nullable": true
                },
                "workspace": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "number_of_members": {
                      "type": "integer"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "file_name": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        },
                        "big": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "api": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "sdk": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    }
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "SSOConfigurationResource": {
          "title": "SSOConfigurationResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "protocol": {
                  "type": "string"
                },
                "protocol_provider": {
                  "type": "string",
                  "nullable": true
                },
                "assertion_consumer_service": {
                  "type": "string",
                  "nullable": true
                },
                "entity_id": {
                  "type": "string",
                  "nullable": true
                },
                "certificate": {
                  "type": "string",
                  "nullable": true
                },
                "client_id": {
                  "type": "string",
                  "nullable": true
                },
                "client_secret": {
                  "type": "string",
                  "nullable": true
                },
                "meta_data": {
                  "type": "array",
                  "nullable": true
                }
              }
            }
          }
        },
        "StoreSSOConfigurationRequest": {
          "title": "StoreSSOConfigurationRequest",
          "type": "object",
          "required": [
            "protocol",
            "identifier",
            "is_disabled"
          ],
          "properties": {
            "protocol": {
              "type": "string",
              "enum": [
                "saml",
                "openidc"
              ]
            },
            "protocol_provider": {
              "type": "string",
              "enum": [
                "okta",
                "auth0"
              ],
              "nullable": true,
              "maxLength": 255,
              "description": "Required if protocol is openidc",
              "allOf": [
                {
                  "if": {
                    "properties": {
                      "protocol": {
                        "const": "openidc"
                      }
                    }
                  },
                  "then": {
                    "required": true
                  }
                }
              ]
            },
            "identifier": {
              "type": "string",
              "description": "A required identifier"
            },
            "is_disabled": {
              "type": "boolean"
            },
            "assertion_consumer_service": {
              "type": "string",
              "nullable": true,
              "maxLength": 255,
              "description": "Required if protocol is saml",
              "allOf": [
                {
                  "if": {
                    "properties": {
                      "protocol": {
                        "const": "saml"
                      }
                    }
                  },
                  "then": {
                    "required": true
                  }
                }
              ]
            },
            "entity_id": {
              "type": "string",
              "nullable": true,
              "maxLength": 255,
              "description": "Required if protocol is saml",
              "allOf": [
                {
                  "if": {
                    "properties": {
                      "protocol": {
                        "const": "saml"
                      }
                    }
                  },
                  "then": {
                    "required": true
                  }
                }
              ]
            },
            "certificate": {
              "type": "string",
              "nullable": true,
              "maxLength": 2000,
              "description": "Required if protocol is saml",
              "allOf": [
                {
                  "if": {
                    "properties": {
                      "protocol": {
                        "const": "saml"
                      }
                    }
                  },
                  "then": {
                    "required": true
                  }
                }
              ]
            },
            "client_id": {
              "type": "string",
              "nullable": true,
              "maxLength": 255,
              "description": "Required if protocol is openidc",
              "allOf": [
                {
                  "if": {
                    "properties": {
                      "protocol": {
                        "const": "openidc"
                      }
                    }
                  },
                  "then": {
                    "required": true
                  }
                }
              ]
            },
            "client_secret": {
              "type": "string",
              "nullable": true,
              "maxLength": 255,
              "description": "Required if protocol is openidc",
              "allOf": [
                {
                  "if": {
                    "properties": {
                      "protocol": {
                        "const": "openidc"
                      }
                    }
                  },
                  "then": {
                    "required": true
                  }
                }
              ]
            },
            "meta_data": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "maxLength": 255,
                "description": "Each metadata item must be a string with a max length of 255 characters"
              }
            }
          }
        },
        "WorkspaceResource": {
          "title": "WorkspaceResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "website_url": {
                  "type": "string"
                },
                "linkedin_url": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "treblle_api_token": {
                  "type": "string"
                },
                "number_of_employees": {
                  "type": "integer"
                },
                "number_of_members": {
                  "type": "integer"
                },
                "avatar": {
                  "type": "object",
                  "properties": {
                    "small": {
                      "type": "string"
                    },
                    "big": {
                      "type": "string"
                    },
                    "file_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "RequestResource": {
          "title": "RequestResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "http_code": {
                  "type": "integer"
                },
                "method": {
                  "type": "string"
                },
                "device": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "device": {
                      "type": "string"
                    },
                    "app": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "version": {
                          "type": "string",
                          "nullable": true
                        },
                        "combined": {
                          "type": "string",
                          "nullable": true
                        },
                        "bundle": {
                          "type": "string",
                          "nullable": true
                        },
                        "os": {
                          "type": "string",
                          "nullable": true
                        },
                        "client": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                },
                "source": {
                  "type": "string"
                },
                "threat_level": {
                  "type": "string",
                  "enum": [
                    "Low",
                    "Medium",
                    "High"
                  ]
                },
                "has_auth": {
                  "type": "boolean"
                },
                "location": {
                  "type": "string"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "ip_address": {
                  "type": "string"
                },
                "app_name": {
                  "type": "string"
                },
                "load_time": {
                  "type": "float"
                },
                "response_size": {
                  "type": "integer"
                },
                "request_url": {
                  "type": "string"
                },
                "request_data": {
                  "type": "object"
                },
                "meta_data": {
                  "type": "object"
                },
                "number_of_comments": {
                  "type": "integer"
                },
                "log_file": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "compliance": {
                  "type": "object",
                  "nullable": true
                },
                "endpoint": {
                  "type": "object",
                  "nullable": true
                },
                "customer_id": {
                  "type": "string"
                },
                "originated_request": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        },
        "EndpointResource": {
          "title": "EndpointResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "api_name": {
                  "type": "string",
                  "nullable": true
                },
                "path": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "group_id": {
                  "type": "string",
                  "nullable": true
                },
                "group_name": {
                  "type": "string",
                  "nullable": true
                },
                "number_of_requests": {
                  "type": "integer"
                },
                "number_of_requests_percentage": {
                  "type": "number"
                },
                "alias": {
                  "type": "string"
                },
                "average_load_time": {
                  "type": "number",
                  "format": "float"
                },
                "is_muted": {
                  "type": "boolean"
                },
                "is_deleted": {
                  "type": "boolean"
                },
                "include_in_docs": {
                  "type": "boolean"
                },
                "graph_data": {
                  "type": "object"
                },
                "latest_request_created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "ProblemResource": {
          "title": "ProblemResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "endpoint_path": {
                  "type": "string"
                },
                "endpoint_id": {
                  "type": "string"
                },
                "problem_path": {
                  "type": "string"
                },
                "number_of_requests": {
                  "type": "integer"
                },
                "occurrences": {
                  "type": "integer"
                },
                "occurrence_change_of_percentage": {
                  "type": "number",
                  "format": "float"
                },
                "type": {
                  "type": "string"
                },
                "file": {
                  "type": "string",
                  "nullable": true
                },
                "line": {
                  "type": "integer",
                  "nullable": true
                },
                "message": {
                  "type": "string",
                  "nullable": true
                },
                "graph_data": {
                  "type": "object"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "NotificationResource": {
          "title": "NotificationResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "owner-joined-workspace",
                    "member-joined-workspace",
                    "api-added-to-workspace",
                    "api-deleted-from-workspace",
                    "new-comment-on-api",
                    "new-invite-to-api",
                    "custom-alert"
                  ]
                },
                "data": {
                  "type": "object"
                },
                "read_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "DocsResource": {
          "title": "DocsResource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "nullable": true
                },
                "description": {
                  "type": "string"
                },
                "date_uploaded": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "CustomAlertResource": {
          "title": "CustomAlertResource",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "saved_search": {
              "type": "object",
              "$ref": "#/components/schemas/SavedSearchResource",
              "nullable": true
            },
            "in_app_notification": {
              "type": "boolean"
            },
            "in_email_notification": {
              "type": "boolean"
            },
            "in_slack_notification": {
              "type": "boolean"
            },
            "frequency": {
              "type": "string"
            },
            "people": {
              "type": "object"
            },
            "is_enabled": {
              "type": "boolean"
            }
          }
        },
        "SavedSearchResource": {
          "title": "SavedSearchResource",
          "properties": {
            "name": {
              "type": "string"
            },
            "filters": {
              "type": "object"
            }
          }
        },
        "CustomAlertRequest": {
          "title": "CustomAlertRequest",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "saved_search_id": {
              "type": "string"
            },
            "people": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            },
            "in_app_notification": {
              "type": "boolean"
            },
            "in_email_notification": {
              "type": "boolean"
            },
            "in_slack_notification": {
              "type": "boolean"
            },
            "slack_channel_id": {
              "description": "required if in_slack_notification is true",
              "type": "string"
            },
            "is_enabled": {
              "type": "boolean"
            }
          }
        },
        "Pagination": {
          "title": "Pagination",
          "type": "object",
          "properties": {
            "total": {
              "type": "integer"
            },
            "count": {
              "type": "integer"
            },
            "per_page": {
              "type": "integer"
            },
            "current_page": {
              "type": "integer"
            },
            "total_pages": {
              "type": "integer"
            }
          }
        },
        "Links": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string"
            },
            "last": {
              "type": "string"
            },
            "prev": {
              "type": "string"
            },
            "next": {
              "type": "string"
            }
          }
        },
        "SavedSearchRequest": {
          "title": "SavedSearchRequest",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "filters": {
              "type": "object",
              "properties": {
                "threat_level": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Low",
                      "Medium",
                      "High"
                    ]
                  }
                },
                "method": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "response_code": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "device": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "environment": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Development",
                      "Staging",
                      "Production"
                    ]
                  }
                },
                "sdk": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "endpoints": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "params": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "is_healthy": {
                  "type": "boolean"
                },
                "has_comments": {
                  "type": "boolean"
                },
                "app_version": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ]
  }